[build-system]
requires = [
    "setuptools>=42",
    "wheel",
    "ninja",
    "cmake>=3.12",
]
#build-backend = "test_backend"
#backend-path = ["backend"]
build-backend = "setuptools.build_meta" # should provide some functions defined in PEP517

[tool.cibuildwheel]
skip = "pp* *_ppc64le *_s390x *_aarch64"
build = "cp3*"
#test-requires = ["pytest", "numpy"]
#test-command = "pytest {project}/tests/test.py"
#test-skip = ["*universal2:arm64"]

[tool.cibuildwheel.linux]
archs = ["auto"]
before-build = "rm -rf build"
repair-wheel-command = "auditwheel repair --lib-sdir . -w {dest_dir} {wheel}"

[tool.cibuildwheel.windows]
#before-build = ["rmdir /s /q build"]
before-build = [
    "pip install delvewheel",
]
repair-wheel-command = "delvewheel repair -w {dest_dir} {wheel}"
# Since the compiled library depends on some external DLL libraries, it needs to be repaired with DelveWheel to ensure its ease of installation

[tool.ruff]
extend-select = [
  "B",    # flake8-bugbear
  "B904",
  "I",    # isort
  "PGH",  # pygrep-hooks
  "RUF",  # Ruff-specific
  "UP",   # pyupgrade
]

extend-ignore = [
  "E501",   # Line too long
]
target-version = "py310"

[tool.mypy]
files = "setup.py"
python_version = "3.10"
strict = true
show_error_codes = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true

[[tool.mypy.overrides]]
module = ["ninja"]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = ["error"]
testpaths = ["tests"]
