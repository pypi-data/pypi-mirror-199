[tool.poetry]
name = "dataclasses-avroschema"
version = "0.39.0"
description = "Generate Avro Schemas from Python classes. Serialize/Deserialize python instances with avro schemas"
authors = ["Marcos Schroh <schrohm@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "dataclasses_avroschema"}]

classifiers = [
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development",
]

[tool.poetry.dependencies]
python = "^3.7"
fastavro = "^1.7.3"
inflect = "^6.0.2"
pytz = "^2022.7.1"
dacite = "^1.8.0"
faker = "^17.6.0"
stringcase = "^1.2.0"
pydantic = {version = "^1.10.6", extras = ["pydantics"]}
dc-avro = {version = "^0.6.3", extras = ["cli"]}
faust-streaming = {version = "^0.10.4", extras = ["faust"]}

[tool.poetry.group.dev.dependencies]
mypy = "^1.1.1"
ruff = "^0.0.256"
black = "^23.1.0"
pytest = "^7.2.2"
pytest-cov = "^4.0.0"
types-pytz = "^2022.7.1.2"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.2"
mkdocs-material = "^9.1.3"

[tool.poetry.group.ci-publish.dependencies]
commitizen = "^2.42.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target_version = ['py37']

[tool.mypy]
allow_empty_bodies = true

[[tool.mypy.overrides]]
module = "stringcase.*"
ignore_missing_imports = true

[tool.ruff]
line-length = 120
select = [
    # Pyflakes
    "F",
    # isort
    "I001"
]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    ".venv",
]

[tool.ruff.pydocstyle]
convention = "google"

[tool.commitizen]
version = "0.39.0"
tag_format = "$version"
version_files = [
    "pyproject.toml:version",
]
update_changelog_on_bump = true
major_version_zero = true
