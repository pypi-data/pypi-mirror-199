"use strict";(self.webpackChunkevince=self.webpackChunkevince||[]).push([[427],{983:(e,t,n)=>{n.r(t),n.d(t,{BraketModel:()=>l,BraketView:()=>d,FashionModel:()=>C,FashionView:()=>S,LatticeModel:()=>y,LatticeView:()=>M,MDModel:()=>x,MDView:()=>b,SpotlightModel:()=>g,SpotlightView:()=>w,TemplateModel:()=>f,TemplateView:()=>_,version:()=>A.i8});var o=n(672),s=n(960),r=n(47),a=n(146);class l extends o.DOMWidgetModel{defaults(){return{...super.defaults(),_model_name:"BraketModel",_view_name:"BraketView",_model_module:"evince",_view_module:"evince",_model_module_version:"0.43.0",_view_module_version:"0.43.0"}}}class d extends o.DOMWidgetView{render(){console.log("Hello from BraketView 43.0");const e=new s.Scene;this.scene=e;let t=new s.PerspectiveCamera(75,document.activeElement.clientWidth/(.6*document.activeElement.clientWidth),.1,1e3);this.camera=t,t.position.z=5;const i=new s.WebGLRenderer;this.renderer=i,this.renderer.setSize(.99*document.activeElement.clientWidth,.99*document.activeElement.clientWidth*.6);const n=new s.Color(this.model.get("bg_color")[0],this.model.get("bg_color")[1],this.model.get("bg_color")[2]);this.renderer.setClearColor(n,1),this.renderer.antialias=!0,this.model.get("vr_button")&&(this.el.appendChild(a.N.createButton(this.renderer)),this.renderer.xr.enabled=!0),new r.z(this.camera,this.renderer.domElement),this.init_changed(),this.el.append(this.renderer.domElement),this.ao_changed(),this.model.on("change:init",this.init_changed,this),this.model.on("change:ao",this.ao_changed,this),i.setAnimationLoop((function(){for(let t=0;t<e.children.length;t++)performance.now(),e.children[t].material.uniforms.time.value+=.01;i.render(e,t)}))}init_changed(){this.pos=this.model.get("pos"),this.masses=this.model.get("masses"),this.colors=this.model.get("colors")}pos_changed(){this.pos=this.model.get("pos");for(let e=0;e<this.pos.length;e++){let t=this.pos[e],i=this.scene.children[e];i.position.x=t[0],i.position.y=t[1],i.position.z=t[2]}}surf_changed(){this.surf=this.model.get("surf");for(let e=0;e<this.surf.length;e++){let e=new s.ShaderMaterial({uniforms:{time:{value:0},resolution:{value:new s.Vector2}},vertexShader:"uniform float time;\n            uniform vec2 resolution;\n            varying vec2 vUv;\n            varying vec3 pos;\n            varying vec3 tex;\n\n            void main() {\n                vUv = uv;\n                pos = vec3(position.x, position.y, position.z);\n                tex = vec3(position.x+time, position.y, position.z);\n                //pos = vec3(position.x + time * resolution.x, position.y + time * resolution.y, position.z);\n                gl_Position = projectionMatrix * modelViewMatrix * vec4( pos, 1.0 );\n            }",fragmentShader:"uniform vec3 user_color;\nuniform float time;\n\nvarying vec2 vUv;\nvarying vec3 pos;\nvarying vec3 tex;\nvarying float q;\n\nvoid main() {\n\nvec2 p = vUv;\nfloat q = tex[0]*tex[0] + tex[1]*tex[1] + tex[2]*tex[2];\n\n    gl_FragColor = gl_FragColor + .01*vec4(.5 + 1.7369481664870148*sqrt(15)*pow(3.141592653589793, -0.75)*tex[2]*(pow(tex[0], 2) - pow(tex[1], 2))*exp(-pow(tex[0], 2) - pow(tex[1], 2) - pow(tex[2], 2)), 0.2, 0.5, 0.5);\n}",side:s.DoubleSide,blending:s.SubtractiveBlending});e.depthWrite=!1;let t=new s.BufferGeometry;t.setIndex(this.surf[1]),t.setAttribute("position",new s.Float32BufferAttribute(this.surf[0],3)),new s.Mesh(t,e)}}ao_changed(){this.ao=this.model.get("ao"),this.surface_view=this.model.get("surface_view");var e=this.model.get("fragment_shader");if(this.surface_view){var t="uniform float time;\nuniform vec2 resolution;\nvarying vec2 vUv;\nvarying vec3 pos;\nvarying vec3 tex;\n\nvoid main() {\n\tvUv = uv;\n\tpos = vec3(position.x, position.y, position.z);\n\ttex = vec3(position.x, position.y, position.z);\n\t//pos = vec3(position.x + time * resolution.x, position.y + time * resolution.y, position.z);\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( pos, 1.0 );\n}";let i=new s.ShaderMaterial({uniforms:{time:{value:0},resolution:{value:new s.Vector2}},vertexShader:t,fragmentShader:e,side:s.DoubleSide,blending:s.SubtractiveBlending});i.depthWrite=!1,this.model.get("additive")&&(i.blending=s.AdditiveBlending);let n=new s.PlaneGeometry(1e4,1e4),o=new s.Mesh(n,i);o.position.x=0,o.position.y=0,o.position.z=0,this.scene.add(o)}else{t="uniform float time;\nuniform vec2 resolution;\nvarying vec2 vUv;\nvarying vec3 pos;\nvarying vec3 tex;\n\nvoid main() {\n\tvUv = uv;\n\tpos = vec3(position.x, position.y, position.z);\n\ttex = vec3(position.x, position.y, position.z);\n\t//pos = vec3(position.x + time * resolution.x, position.y + time * resolution.y, position.z);\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( pos, 1.0 );\n}";let i=new s.SphereBufferGeometry(1),n=(new s.InstancedBufferGeometry).copy(i),o=this.model.get("n_concentric");console.log("number of concetric spheres:",o),n.maxInstancedCount=o;let r=[],a=[];for(let e=0;e<o;e++)a.push(0,0,0),r.push(2*(e/o)**1.5+3-1,0,0);let l=new Float32Array(a);n.setAttribute("aCurve",new s.InstancedBufferAttribute(l,3,!1));let d=new Float32Array(r);n.setAttribute("aRadius",new s.InstancedBufferAttribute(d,3,!1)),this.instancedGeometry=n;let h=new s.ShaderMaterial({fragmentShader:e,vertexShader:"// Define the attributes\nvarying vec3 vColor;\nvarying vec3 tex;\nvarying vec2 vUv;\n\nattribute vec3 aRadius;\nattribute vec3 aCurve;\n\nvoid main(){\n//vec3 transformed = position*aRadius.x*length(cameraPosition);\nvec3 transformed = position*aRadius.x*length(cameraPosition); //n\n//vec3 transformed = position*aRadius.x*length(modelViewMatrix[3])*2.0; \n\n//tex = vec3(transformed.x, transformed.y, transformed.z) + cameraPosition; // + 3.0*cameraPosition; \ntex = vec3(transformed.x, transformed.y, transformed.z) + 3.0*cameraPosition; //n\n\n// 3. Get position and add it to the final position\n//vec3 curvePosition = vec3(aCurve.x, aCurve.y, aCurve.z);\n\n//transformed += curvePosition;\n\ngl_Position = projectionMatrix * modelViewMatrix * vec4(tex, 1.0);\n\n//vColor = aColor;\n//vPis = gl_position;\n}",uniforms:{time:{value:0},resolution:{value:new s.Vector2}},side:s.BackSide,blending:s.SubtractiveBlending});this.model.get("additive")&&(h.blending=s.AdditiveBlending),h.depthWrite=!1;let c=new s.InstancedMesh(n,h,o);c.instanceMatrix.needsUpdate=!0,this.scene.add(c)}}}var h=n(804),c=n(426),m=n(335),u=n(721),p=(n(546),n(441)),v=n(980);class g extends o.DOMWidgetModel{defaults(){return{...super.defaults(),_model_name:"SpotlightModel",_view_name:"SpotlightView",_model_module:"evince",_view_module:"evince",_model_module_version:"0.43.0",_view_module_version:"0.43.0"}}}class w extends o.DOMWidgetView{render(){const e=new s.Scene,t={};this.scene=e;let n=new s.PerspectiveCamera(75,document.activeElement.clientWidth/(.6*document.activeElement.clientWidth),.1,1e3);this.camera=n,this.camera.position.z=5;const o=new s.WebGLRenderer;o.setPixelRatio(window.devicePixelRatio),this.renderer=o,this.el.appendChild(a.N.createButton(this.renderer)),this.renderer.setSize(document.activeElement.clientWidth,.6*document.activeElement.clientWidth);const l=new s.Color(this.model.get("bg_color")[0],this.model.get("bg_color")[1],this.model.get("bg_color")[2]);this.renderer.setClearColor(l,1),this.renderer.antialias=!0,this.renderer.xr.enabled=!0;let d=new r.z(this.camera,this.renderer.domElement);this.controls=d,this.init_changed(),this.el.append(this.renderer.domElement),this.el.appendChild(a.N.createButton(o)),this.pos_changed(),this.model.on("change:pos",this.pos_changed,this),this.model.on("change:init",this.init_changed,this);const g=new c.C(this.scene,this.camera),w=new h.xC(this.renderer);if(w.addPass(g),this.model.get("sao")){console.log("sao active");const e=new m.F(this.scene,this.camera,!0,!0);e.params.saoScale=this.model.get("saoScale"),e.params.saoBias=this.model.get("saoBias"),e.params.saoIntensity=this.model.get("saoIntensity"),console.log("sao render pass",e.renderToScreen),w.addPass(e)}if(this.model.get("dof")){console.log("dof active");const e=new u.A(this.scene,this.camera,{focus:this.model.get("focus"),aperture:this.model.get("aperture"),maxblur:this.model.get("max_blur"),width:document.activeElement.clientWidth,height:.6*document.activeElement.clientWidth});console.log("dof render pass",e.renderToScreen),e.needsSwap=!0,w.addPass(e),t.bokeh=e}if(this.model.get("fxaa")){console.log("fxaa active");const e=new v.T(p.C),t=o.getPixelRatio();e.uniforms.resolution.value.set(1/(t*document.activeElement.clientWidth),1/(t*document.activeElement.clientWidth*.6)),e.renderToScreen=!1,console.log("fxaa render pass",e.renderToScreen),w.addPass(e)}t.composer=w,this.renderer.autoClear=!1;var x=this;o.setAnimationLoop((function(){t.composer.render(),x.pos=x.model.get("pos"),new s.Matrix4;let e=[];if(x.box.length>2){for(let e=0;e<x.pos.length;e++)x.scene.children[0].children[e].position.set(x.pos[e][0],x.pos[e][1],x.pos[e][2]);for(let e=0;e<x.bonds.length;e++){let t=x.pos[x.bonds[e][0]],i=x.pos[x.bonds[e][1]],r=new s.Vector3(t[0],t[1],t[2]),a=new s.Vector3(i[0],i[1],i[2]);var n=(new s.Vector3).subVectors(a,r),o=x.scene.children[1].children[e];o.scale.z=n.length(),o.position.x=.5*(i[0]+t[0]),o.position.y=.5*(i[1]+t[1]),o.position.z=.5*(i[2]+t[2]),o.lookAt(a)}}if(2==x.box.length){for(let t=0;t<x.pos.length;t++)e.push(x.pos[t][0],x.pos[t][1]);let t=new Float32Array(e);x.scene.children[0].children[i].geometry.setAttribute("aCurve",new s.InstancedBufferAttribute(t,2,!1))}}))}init_changed(){console.log("init change"),this.pos=this.model.get("pos"),this.masses=this.model.get("masses"),this.colors=this.model.get("colors"),this.box=this.model.get("box"),this.bonds=this.model.get("bonds"),this.radius=this.model.get("radius");const e=new s.Group,t=new s.Group;for(let t=0;t<this.pos.length;t++){let i=new s.SphereBufferGeometry(this.radius[t],30,20);i.attributes.position.needsUpdate=!0;let n=new s.MeshStandardMaterial;n.color=new s.Color(this.colors[t][0],this.colors[t][1],this.colors[t][2]),n.roughness=.2,n.metalness=.2;let o=new s.Mesh(i,n);o.position.set(this.pos[t][0],this.pos[t][1],this.pos[t][2]),o.updateMatrix(),e.add(o)}this.scene.add(e);for(let e=0;e<this.bonds.length;e++){let r=this.pos[this.bonds[e][0]],a=this.pos[this.bonds[e][1]],l=new s.Vector3(r[0],r[1],r[2]),d=new s.Vector3(a[0],a[1],a[2]);var i=(new s.Vector3).subVectors(d,l);let h=new s.MeshStandardMaterial({color:2829099});h.roughness=.2,h.metalness=.2;var n=new s.CylinderGeometry(.4,.4,1,6,4,!0);n.applyMatrix4((new s.Matrix4).makeRotationX(1.57075));var o=new s.Mesh(n,h);o.scale.z=i.length(),o.position.x=.5*(a[0]+r[0]),o.position.y=.5*(a[1]+r[1]),o.position.z=.5*(a[2]+r[2]),o.lookAt(d),t.add(o)}this.scene.add(t);let r=new s.AmbientLight(16777215,.8);this.scene.add(r);const a=new s.DirectionalLight(16777215,.5);a.position.set(1,1,1),this.scene.add(a)}remove_atom(){gonners=this.model.get("atoms_for_deletion");for(let e=0;e<gonners.length;e++){this.scene.children[0].children[gonners[e]].remove();for(let t=0;t<this.bonds.length;t++)this.bonds[t][0]==gonners[e]&&this.scene.children[1].children[t].remove(),this.bonds[t][1]==gonners[e]&&this.scene.children[1].children[t].remove()}}pos_changed(){this.pos=this.model.get("pos"),new s.Matrix4}}class x extends o.DOMWidgetModel{defaults(){return{...super.defaults(),_model_name:"MDModel",_view_name:"MDView",_model_module:"evince",_view_module:"evince",_model_module_version:"0.43.0",_view_module_version:"0.43.0"}}}class b extends o.DOMWidgetView{render(){const e=new s.Scene;this.scene=e;let t=new s.PerspectiveCamera(75,document.activeElement.clientWidth/(.6*document.activeElement.clientWidth),.1,1e3);this.camera=t,this.camera.position.z=5;const i=new s.WebGLRenderer;i.setPixelRatio(window.devicePixelRatio),this.renderer=i,this.el.appendChild(a.N.createButton(this.renderer)),this.renderer.setSize(document.activeElement.clientWidth,.6*document.activeElement.clientWidth);const n=new s.Color(this.model.get("bg_color")[0],this.model.get("bg_color")[1],this.model.get("bg_color")[2]);this.renderer.setClearColor(n,1),this.renderer.antialias=!0,this.renderer.xr.enabled=!0;let o=new r.z(this.camera,this.renderer.domElement);this.controls=o,this.init_changed(),this.el.append(this.renderer.domElement),this.pos_changed(),this.model.on("change:pos",this.pos_changed,this),this.model.on("change:init",this.init_changed,this),i.setAnimationLoop((function(){i.render(e,t)}))}init_changed(){console.log("init change"),this.pos=this.model.get("pos"),this.masses=this.model.get("masses"),this.colors=this.model.get("colors"),this.box=this.model.get("box"),this.box.length>2&&(this.camera.position.z=2*Math.abs(this.box[2]));let e=new s.SphereBufferGeometry(.3),t=(new s.InstancedBufferGeometry).copy(e),i=this.pos.length;t.maxInstancedCount=i;let n=[],o=[];if(2==this.box.length){for(let e=0;e<i;e++)o.push(this.pos[e][0],this.pos[e][1]),n.push(this.colors[e][0],this.colors[e][1],this.colors[e][2]);let e=new Float32Array(o);t.setAttribute("aCurve",new s.InstancedBufferAttribute(e,3,!1));var r="attribute vec3 aColor;\nvarying vec3 vColor;\n//varying vec3 vPos;\n\n// 1. Define the attributes\nattribute vec4 aCurve;\n\nvoid main(){\nvec3 transformed = position;\n\n// 2. Extract values from attribute\n//float aRadius = aCurve.x;\n\n\n// 3. Get position and add it to the final position\nvec3 curvePosition = vec3(aCurve.x, aCurve.y, 0.0);\n\ntransformed += curvePosition;\n\ngl_Position = projectionMatrix * modelViewMatrix * vec4(transformed, 1.0);\nvColor = aColor;\n//vPis = gl_position;\n}"}if(3==this.box.length){for(let e=0;e<i;e++)o.push(this.pos[e][0],this.pos[e][1],this.pos[e][2]),n.push(this.colors[e][0],this.colors[e][1],this.colors[e][2]);let e=new Float32Array(o);t.setAttribute("aCurve",new s.InstancedBufferAttribute(e,3,!1)),r="attribute vec3 aColor;\nvarying vec3 vColor;\n//varying vec3 vPos;\n\n// 1. Define the attributes\nattribute vec4 aCurve;\n\nvoid main(){\nvec3 transformed = position;\n\n// 2. Extract values from attribute\n//float aRadius = aCurve.x;\n\n\n// 3. Get position and add it to the final position\nvec3 curvePosition = vec3(aCurve.x, aCurve.y, aCurve.z);\n\ntransformed += curvePosition;\n\ngl_Position = projectionMatrix * modelViewMatrix * vec4(transformed, 1.0);\nvColor = aColor*(.7 + .3*normal[0]);\n//vPis = gl_position;\n}"}let a=new Float32Array(n);t.setAttribute("aColor",new s.InstancedBufferAttribute(a,3,!1)),this.instancedGeometry=t;let l=new s.ShaderMaterial({fragmentShader:"varying vec3 vColor;\nvoid main(){\ngl_FragColor = gl_FragColor + vec4(vColor, 1.0);\n}",vertexShader:r}),d=new s.InstancedMesh(t,l,i);if(d.instanceMatrix.needsUpdate=!0,this.scene.add(d),this.box.length>2){if(this.box[0]>0){let e=new s.PlaneGeometry(2*Math.abs(this.box[1]),2*Math.abs(this.box[2])),t=new s.MeshBasicMaterial({color:"rgba(10,10,5)",side:s.BackSide});t.opacity=.2,t.transparent=!0,t.blending=s.SubtractiveBlending,this.model.get("additive")&&(t.blending=s.AdditiveBlending);let i=new s.Mesh(e,t);i.rotation.x=0,i.position.x=this.box[0],i.rotation.y=1.57075,i.rotation.x=1.57075,this.scene.add(i),i=new s.Mesh(e,t),i.rotation.x=0,i.position.x=-this.box[0],i.rotation.y=-1.57075,i.rotation.x=1.57075,this.scene.add(i)}if(this.box[1]>0){let e=new s.PlaneGeometry(2*Math.abs(this.box[0]),2*Math.abs(this.box[2])),t=new s.MeshBasicMaterial({color:"rgba(20,20,10)",side:s.BackSide});t.opacity=.2,t.transparent=!0,t.blending=s.SubtractiveBlending,this.model.get("additive")&&(t.blending=s.AdditiveBlending);let i=new s.Mesh(e,t);i.rotation.y=0,i.position.y=-this.box[1],i.rotation.x=1.57075,i.rotation.z=0,this.scene.add(i),i=new s.Mesh(e,t),i.rotation.y=0,i.position.y=this.box[1],i.rotation.x=-1.57075,i.rotation.z=0,this.scene.add(i)}if(this.box[2]>0){let e=new s.PlaneGeometry(2*Math.abs(this.box[0]),2*Math.abs(this.box[1])),t=new s.MeshBasicMaterial({color:"rgba(35,35,25)",side:s.BackSide});t.opacity=.2,t.transparent=!0,t.blending=s.SubtractiveBlending,this.model.get("additive")&&(t.blending=s.AdditiveBlending);let i=new s.Mesh(e,t);i.position.z=this.box[2],this.scene.add(i),i=new s.Mesh(e,t),i.rotation.x=3.1415,i.position.z=-this.box[2],this.scene.add(i)}let e=[];e.push(new s.Vector3(this.box[0],this.box[1],this.box[2])),e.push(new s.Vector3(this.box[0],-this.box[1],this.box[2])),e.push(new s.Vector3(-this.box[0],-this.box[1],this.box[2])),e.push(new s.Vector3(-this.box[0],this.box[1],this.box[2])),e.push(new s.Vector3(this.box[0],this.box[1],this.box[2]));let t=(new s.BufferGeometry).setFromPoints(e),i=new s.Line(t,new s.LineBasicMaterial({color:7829367}));this.scene.add(i),e=[],e.push(new s.Vector3(this.box[0],this.box[1],-this.box[2])),e.push(new s.Vector3(this.box[0],-this.box[1],-this.box[2])),e.push(new s.Vector3(-this.box[0],-this.box[1],-this.box[2])),e.push(new s.Vector3(-this.box[0],this.box[1],-this.box[2])),e.push(new s.Vector3(this.box[0],this.box[1],-this.box[2])),t=(new s.BufferGeometry).setFromPoints(e),i=new s.Line(t,new s.LineBasicMaterial({color:7829367})),this.scene.add(i),e=[],e.push(new s.Vector3(this.box[0],this.box[1],-this.box[2])),e.push(new s.Vector3(this.box[0],this.box[1],this.box[2])),t=(new s.BufferGeometry).setFromPoints(e),i=new s.Line(t,new s.LineBasicMaterial({color:7829367})),this.scene.add(i),e=[],e.push(new s.Vector3(this.box[0],-this.box[1],-this.box[2])),e.push(new s.Vector3(this.box[0],-this.box[1],this.box[2])),t=(new s.BufferGeometry).setFromPoints(e),i=new s.Line(t,new s.LineBasicMaterial({color:7829367})),this.scene.add(i),e=[],e.push(new s.Vector3(-this.box[0],this.box[1],-this.box[2])),e.push(new s.Vector3(-this.box[0],this.box[1],this.box[2])),t=(new s.BufferGeometry).setFromPoints(e),i=new s.Line(t,new s.LineBasicMaterial({color:7829367})),this.scene.add(i),e=[],e.push(new s.Vector3(-this.box[0],-this.box[1],-this.box[2])),e.push(new s.Vector3(-this.box[0],-this.box[1],this.box[2])),t=(new s.BufferGeometry).setFromPoints(e),i=new s.Line(t,new s.LineBasicMaterial({color:7829367})),this.scene.add(i)}let h=new s.AmbientLight(2105376,5);this.scene.add(h);const c=new s.DirectionalLight(16777215,.5);c.position.set(1,1,1),this.scene.add(c)}pos_changed(){this.pos=this.model.get("pos");let e=this.scene.children[0],t=(new s.Matrix4,[]);if(this.box.length>2){for(let i=0;i<e.count;i++)t.push(this.pos[i][0],this.pos[i][1],this.pos[i][2]);let i=new Float32Array(this.pos.flat(),3);this.scene.children[0].geometry.setAttribute("aCurve",new s.InstancedBufferAttribute(i,3,!1))}if(2==this.box.length){for(let i=0;i<e.count;i++)t.push(this.pos[i][0],this.pos[i][1]);let i=new Float32Array(t);this.scene.children[0].geometry.setAttribute("aCurve",new s.InstancedBufferAttribute(i,2,!1))}}}class f extends o.DOMWidgetModel{defaults(){return{...super.defaults(),_model_name:"TemplateModel",_view_name:"TemplateView",_model_module:"evince",_view_module:"evince",_model_module_version:"0.43.0",_view_module_version:"0.43.0"}}}class _ extends o.DOMWidgetView{render(){const e=new s.Scene;this.scene=e;let t=new s.PerspectiveCamera(75,document.activeElement.clientWidth/(.6*document.activeElement.clientWidth),.1,1e3);this.camera=t,this.camera.position.z=5;const i=new s.WebGLRenderer;this.renderer=i,i.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(.99*document.activeElement.clientWidth,.99*document.activeElement.clientWidth*.6),this.renderer.setClearColor(986927,1),this.renderer.antialias=!0;let n=new r.z(this.camera,this.renderer.domElement);this.controls=n,this.renderer.render(this.scene,this.camera),this.el.append(this.renderer.domElement);let o=new s.SphereBufferGeometry(1,20,10),a=new s.MeshStandardMaterial;a.roughness=.2,a.metalness=.2;let l=new s.Mesh(o,a);this.scene.add(l),this.value_changed(),this.model.on("change:value",this.value_changed,this),i.setAnimationLoop((function(){i.render(e,t)}))}value_changed(){}}class y extends o.DOMWidgetModel{defaults(){return{...super.defaults(),_model_name:"LatticeModel",_view_name:"LatticeView",_model_module:"evince",_view_module:"evince",_model_module_version:"0.43.0",_view_module_version:"0.43.0"}}}class M extends o.DOMWidgetView{render(){const e=new s.Scene;this.scene=e;let t=new s.PerspectiveCamera(75,document.activeElement.clientWidth/(.6*document.activeElement.clientWidth),.1,1e3);this.camera=t,this.camera.position.z=5;const i=new s.WebGLRenderer;i.setPixelRatio(window.devicePixelRatio),this.renderer=i,this.el.appendChild(a.N.createButton(this.renderer)),this.renderer.setAnimationLoop((function(){i.render(e,t)})),this.renderer.setSize(.99*document.activeElement.clientWidth,.99*document.activeElement.clientWidth*.6),this.renderer.setClearColor(986927,1),this.renderer.antialias=!0,this.renderer.xr.enabled=!0;let n=new r.z(this.camera,this.renderer.domElement);this.controls=n,this.init_changed(),this.el.append(this.renderer.domElement),this.pos_changed(),this.state_changed(),this.model.on("change:pos",this.pos_changed,this),this.model.on("change:init",this.init_changed,this),this.model.on("change:state",this.state_changed,this),i.setAnimationLoop((function(){i.render(e,t)}))}init_changed(){this.pos=this.model.get("pos"),this.masses=this.model.get("masses"),this.colors=this.model.get("colors"),this.box=this.model.get("box"),this.state=this.model.get("state"),this.box.length>2&&(this.camera.position.z=2*Math.abs(this.box[2]));let e=new s.SphereBufferGeometry(.3),t=(new s.InstancedBufferGeometry).copy(e),i=this.state.length;t.maxInstancedCount=i;let n=[];if(2==this.box.length){let e=[];for(let t=0;t<i;t++)e.push(this.state[t],this.state[t]);let r=new Float32Array(e);t.setAttribute("aState",new s.InstancedBufferAttribute(r,2,!1));for(let e=0;e<i;e++)n.push(this.pos[e][0],this.pos[e][1],0);let a=new Float32Array(n);t.setAttribute("aCurve",new s.InstancedBufferAttribute(a,3,!1));var o="attribute vec3 aColor;\nvarying vec4 vColor;\n//varying vec3 vPos;\n\n// 1. Define the attributes\nattribute vec4 aCurve;\nattribute vec2 aState;\n\nvec3 getColor(float stateValue){\n  \n  vec3 pos = vec3(0.);\n  pos.x += cos(.01*stateValue );\n  pos.y += 0.0; // sin(progress *PI*8.) * radius + sin(progress * PI *2.) * 30.;\n  pos.z += 0.0; // progress *200. - 200./2. + offset;\n  \n  return pos;\n}\n\nvoid main(){\n  vec3 transformed = position;\n  \n  // 2. Extract values from attribute\n  //float aRadius = aCurve.x;\n\n  \n  // 3. Get position and add it to the final position\n  vec3 curvePosition = vec3(aCurve.x, aCurve.y, 0.0);\n   \n  \n\n  transformed += curvePosition;\n  \n  gl_Position = projectionMatrix * modelViewMatrix * vec4(transformed, 1.0);\n  //vColor = aColor;\n  //vColor = getColor(aState);\n  vColor = vec4(aState.x/2.0, 2.0-aState.y, .1*aState.y, aState.y); //aState.y);\n  //vPis = gl_position;\n}"}if(3==this.box.length){let e=[];for(let t=0;t<i;t++)e.push(this.state[t],this.state[t]);let r=new Float32Array(e);t.setAttribute("aState",new s.InstancedBufferAttribute(r,2,!1));for(let e=0;e<i;e++)n.push(this.pos[e][0],this.pos[e][1],this.pos[e][2]);let a=new Float32Array(n);t.setAttribute("aCurve",new s.InstancedBufferAttribute(a,3,!1)),o="attribute vec3 aColor;\nvarying vec4 vColor;\n//varying vec3 vPos;\n\n// 1. Define the attributes\nattribute vec4 aCurve;\nattribute vec2 aState;\n\nvec4 getColor(vec2 stateValue){\n  \n  vec4 pos = vec4(0.3);\n  pos.x = .5*(1.0 + cos(6.0*stateValue.x));\n  pos.y = .5*(1.0 + sin(stateValue.x)); // (1.0+sin(stateValue *3.14*8.0);\n  pos.z = .5*(1.0 + cos(24.0*stateValue.x + 0.5));\n  //pos.z += .5*(1.0+cos(3.14*stateValue +.5);\n  pos.w = stateValue.y;\n  \n  return pos;\n}\n\nvoid main(){\n  vec3 transformed = position;\n  \n  // 2. Extract values from attribute\n  //float aRadius = aCurve.x;\n\n  \n  // 3. Get position and add it to the final position\n  vec3 curvePosition = vec3(aCurve.x, aCurve.y, aCurve.z);\n   \n  \n\n  transformed += curvePosition;\n  \n  gl_Position = projectionMatrix * modelViewMatrix * vec4(transformed, 1.0);\n  vColor = getColor(aState);\n  //vColor = vec4(aState.x/2.0, 2.0-aState.y, .1*aState.y, aState.y); //aState.y);\n\n}"}let r=new Float32Array([]);t.setAttribute("aColor",new s.InstancedBufferAttribute(r,3,!1)),this.instancedGeometry=t;let a=new s.ShaderMaterial({fragmentShader:"varying vec4 vColor;\nvoid main(){\n  gl_FragColor = gl_FragColor + .5*vColor; //vec4(vColor, 1.0);\n}",vertexShader:o,blending:s.AdditiveBlending});a.depthWrite=!1,a.side=s.FrontSide;let l=new s.InstancedMesh(t,a,i);l.instanceMatrix.needsUpdate=!0,this.scene.add(l);let d=new s.AmbientLight(2105376,5);this.scene.add(d);const h=new s.DirectionalLight(16777215,.5);h.position.set(1,1,1),this.scene.add(h)}pos_changed(){this.pos=this.model.get("pos");let e=this.scene.children[0],t=(new s.Matrix4,[]);if(this.box.length>2){for(let i=0;i<e.count;i++)t.push(this.pos[i][0],this.pos[i][1],this.pos[i][2]);let i=new Float32Array(t);this.scene.children[0].geometry.setAttribute("aCurve",new s.InstancedBufferAttribute(i,3,!1))}if(2==this.box.length){for(let i=0;i<e.count;i++)t.push(this.pos[i][0],this.pos[i][1]);let i=new Float32Array(t);this.scene.children[0].geometry.setAttribute("aCurve",new s.InstancedBufferAttribute(i,2,!1))}}state_changed(){this.state=this.model.get("state");let e=this.scene.children[0],t=(new s.Matrix4,[]);for(let i=0;i<e.count;i++)t.push(this.state[i],this.state[i]);let i=new Float32Array(t);this.scene.children[0].geometry.setAttribute("aState",new s.InstancedBufferAttribute(i,2,!1))}}class C extends o.DOMWidgetModel{defaults(){return{...super.defaults(),_model_name:"FashionModel",_view_name:"FashionView",_model_module:"evince",_view_module:"evince",_model_module_version:"0.43.0",_view_module_version:"0.43.0"}}}class S extends o.DOMWidgetView{render(){super.render();const e=new s.Scene,t={};this.scene=e;let i=null,n=new s.PerspectiveCamera(75,document.activeElement.clientWidth/(.6*document.activeElement.clientWidth),.1,1e3);this.camera=n,this.camera.position.z=5,this.camera.aspect=document.activeElement.clientWidth/(.6*document.activeElement.clientWidth),this.camera.updateProjectionMatrix();const o=new s.WebGLRenderer;o.setPixelRatio(window.devicePixelRatio),this.renderer=o,this.el.appendChild(a.N.createButton(this.renderer)),this.renderer.setSize(document.activeElement.clientWidth,.6*document.activeElement.clientWidth);const l=new s.Color(this.model.get("bg_color")[0],this.model.get("bg_color")[1],this.model.get("bg_color")[2]);this.renderer.setClearColor(l,1),this.renderer.antialias=!0,this.renderer.xr.enabled=!0;let d=new r.z(this.camera,this.renderer.domElement);this.controls=d,this.init_changed(),this.el.append(this.renderer.domElement),this.el.appendChild(a.N.createButton(o)),this.pos_changed(),this.model.on("change:pos",this.pos_changed,this),this.model.on("change:init",this.init_changed,this);const g=new c.C(this.scene,this.camera),w=new h.xC(this.renderer);w.addPass(g);let x=new s.Raycaster,b=new s.Vector2;if(this.model.get("sao")){console.log("sao active"),console.log("sao active");const e=new m.F(this.scene,this.camera,!0,!0);e.params.saoScale=this.model.get("saoScale"),e.params.saoBias=this.model.get("saoBias"),e.params.saoIntensity=this.model.get("saoIntensity"),console.log("sao render pass",e.renderToScreen),w.addPass(e)}if(this.model.get("dof")){console.log("dof active");const e=new u.A(this.scene,this.camera,{focus:this.model.get("focus"),aperture:this.model.get("aperture"),maxblur:this.model.get("max_blur"),width:document.activeElement.clientWidth,height:.6*document.activeElement.clientWidth});console.log("dof render pass",e.renderToScreen),e.needsSwap=!0,w.addPass(e),t.bokeh=e}if(this.model.get("fxaa")){console.log("fxaa active");const e=new v.T(p.C),t=o.getPixelRatio();e.uniforms.resolution.value.set(1/(t*document.activeElement.clientWidth),1/(t*document.activeElement.clientWidth*.6)),e.renderToScreen=!1,console.log("fxaa render pass",e.renderToScreen),w.addPass(e)}t.composer=w,window.addEventListener("resize",(function(){console.log("window_resize"),n.aspect=document.activeElement.clientWidth/(.6*document.activeElement.clientWidth),n.updateProjectionMatrix(),o.setSize(document.activeElement.clientWidth,.6*document.activeElement.clientWidth)})),window.addEventListener("pointermove",(function(t){i&&(i.material.emissive.setHex(i.material.currentEmissive),i=null);var o=t.target.getBoundingClientRect();b.x=2*(t.clientX-o.left)/(o.right-o.left)-1,b.y=-2*(t.clientY-o.top)/(o.bottom-o.top)+1,console.log(b.x,b.y),x.setFromCamera(b,n);const s=x.intersectObject(e,!0);if(s.length>0){const e=s.filter((function(e){return e&&e.object}))[0];e&&e.object&&(i=e.object,i.material.currentEmissive=i.material.emissive.getHex(),i.material.emissive.setHex(6710886))}})),window.addEventListener("pointerdown",(function(){console.log("pointer_up",i.physics_typedef,i.index_in_scene),f.model.set("add_new_atom",[i.index_in_scene,0]),f.model.save_changes()}));var f=this;o.setAnimationLoop((function(){t.composer.render(),f.pos=f.model.get("pos"),new s.Matrix4;let e=[];if(f.box.length>2){for(let e=0;e<f.pos.length;e++)f.scene.children[e].position.set(f.pos[e][0],f.pos[e][1],f.pos[e][2]);for(let e=0;e<f.bonds.length;e++){let t=f.pos[f.bonds[e][0]],o=f.pos[f.bonds[e][1]],r=new s.Vector3(t[0],t[1],t[2]),a=new s.Vector3(o[0],o[1],o[2]);var i=(new s.Vector3).subVectors(a,r),n=f.scene.children[e+f.pos.length];n.scale.z=i.length(),n.position.x=.5*(o[0]+t[0]),n.position.y=.5*(o[1]+t[1]),n.position.z=.5*(o[2]+t[2]),n.lookAt(a)}}if(2==f.box.length){for(let t=0;t<f.pos.length;t++)e.push(f.pos[t][0],f.pos[t][1]);let t=new Float32Array(e);f.scene.children[0].geometry.setAttribute("aCurve",new s.InstancedBufferAttribute(t,2,!1))}}))}init_changed(){console.log("init change"),this.pos=this.model.get("pos"),this.masses=this.model.get("masses"),this.colors=this.model.get("colors"),this.box=this.model.get("box"),this.bonds=this.model.get("bonds"),this.radius=this.model.get("radius");for(let e=0;e<this.pos.length;e++){let t=new s.SphereBufferGeometry(this.radius[e],30,20);t.attributes.position.needsUpdate=!0;let i=new s.MeshStandardMaterial;i.color=new s.Color(this.colors[e][0],this.colors[e][1],this.colors[e][2]),i.roughness=.2,i.metalness=.2;let n=new s.Mesh(t,i);n.position.set(this.pos[e][0],this.pos[e][1],this.pos[e][2]),n.updateMatrix(),n.index_in_scene=e,n.physics_typedef="atom",this.scene.add(n)}for(let n=0;n<this.bonds.length;n++){let o=this.pos[this.bonds[n][0]],r=this.pos[this.bonds[n][1]],a=new s.Vector3(o[0],o[1],o[2]),l=new s.Vector3(r[0],r[1],r[2]);var e=(new s.Vector3).subVectors(l,a);let d=new s.MeshStandardMaterial({color:2829099});d.roughness=.2,d.metalness=.2;var t=new s.CylinderGeometry(.4,.4,e.length(),6,4,!0);t.applyMatrix4((new s.Matrix4).makeRotationX(1.57075));var i=new s.Mesh(t,d);i.index_in_scene=n,i.physics_typedef="bond",i.position.x=.5*(r[0]+o[0]),i.position.y=.5*(r[1]+o[1]),i.position.z=.5*(r[2]+o[2]),i.lookAt(l),this.scene.add(i)}let n=new s.AmbientLight(16777215,.8);this.scene.add(n);const o=new s.DirectionalLight(16777215,.5);o.position.set(1,1,1),this.scene.add(o)}pos_changed(){this.pos=this.model.get("pos")}}const A={i8:"0.43.0"}}}]);