"use strict";(self.webpackChunkevince=self.webpackChunkevince||[]).push([[261],{458:(e,t,i)=>{i.r(t),i.d(t,{BraketModel:()=>a,BraketView:()=>d,SpotlightModel:()=>u,SpotlightView:()=>g,TemplateModel:()=>w,TemplateView:()=>f,version:()=>x.i8});var n=i(672),o=i(960),s=i(47),r=i(146);class a extends n.DOMWidgetModel{defaults(){return{...super.defaults(),_model_name:"BraketModel",_view_name:"BraketView",_model_module:"evince",_view_module:"evince",_model_module_version:"0.30.0",_view_module_version:"0.30.0"}}}class d extends n.DOMWidgetView{render(){console.log("Hello from BraketView 3.2");const e=new o.Scene;this.scene=e;let t=new o.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,1e3);this.camera=t,t.position.z=5;const i=new o.WebGLRenderer;this.renderer=i,this.renderer.setSize(.9*document.activeElement.clientWidth,.9*document.activeElement.clientWidth*.6);const n=new o.Color(this.model.get("bg_color")[0],this.model.get("bg_color")[1],this.model.get("bg_color")[2]);this.renderer.setClearColor(n,1),this.renderer.antialias=!0,this.el.appendChild(r.N.createButton(this.renderer)),this.renderer.xr.enabled=!0,new s.z(this.camera,this.renderer.domElement),this.init_changed(),this.el.append(this.renderer.domElement),this.ao_changed(),this.model.on("change:init",this.init_changed,this),this.model.on("change:ao",this.ao_changed,this),i.setAnimationLoop((function(){for(let e=0;e<this.scene.children.length;e++)performance.now(),this.scene.children[e].material.uniforms.time.value+=.01;i.render(e,t)}))}init_changed(){this.pos=this.model.get("pos"),this.masses=this.model.get("masses"),this.colors=this.model.get("colors")}pos_changed(){this.pos=this.model.get("pos");for(let e=0;e<this.pos.length;e++){let t=this.pos[e],i=this.scene.children[e];i.position.x=t[0],i.position.y=t[1],i.position.z=t[2]}}surf_changed(){this.surf=this.model.get("surf");for(let e=0;e<this.surf.length;e++){let e=new o.ShaderMaterial({uniforms:{time:{value:0},resolution:{value:new o.Vector2}},vertexShader:"uniform float time;\n            uniform vec2 resolution;\n            varying vec2 vUv;\n            varying vec3 pos;\n            varying vec3 tex;\n\n            void main() {\n                vUv = uv;\n                pos = vec3(position.x, position.y, position.z);\n                tex = vec3(position.x+time, position.y, position.z);\n                //pos = vec3(position.x + time * resolution.x, position.y + time * resolution.y, position.z);\n                gl_Position = projectionMatrix * modelViewMatrix * vec4( pos, 1.0 );\n            }",fragmentShader:"uniform vec3 user_color;\nuniform float time;\n\nvarying vec2 vUv;\nvarying vec3 pos;\nvarying vec3 tex;\nvarying float q;\n\nvoid main() {\n\nvec2 p = vUv;\nfloat q = tex[0]*tex[0] + tex[1]*tex[1] + tex[2]*tex[2];\n\n    gl_FragColor = gl_FragColor + .01*vec4(.5 + 1.7369481664870148*sqrt(15)*pow(3.141592653589793, -0.75)*tex[2]*(pow(tex[0], 2) - pow(tex[1], 2))*exp(-pow(tex[0], 2) - pow(tex[1], 2) - pow(tex[2], 2)), 0.2, 0.5, 0.5);\n}",side:o.DoubleSide,blending:o.SubtractiveBlending});e.depthWrite=!1;let t=new o.BufferGeometry;t.setIndex(this.surf[1]),t.setAttribute("position",new o.Float32BufferAttribute(this.surf[0],3)),new o.Mesh(t,e)}}ao_changed(){this.ao=this.model.get("ao"),this.surface_view=this.model.get("surface_view");var e=this.model.get("fragment_shader");if(this.surface_view){var t="uniform float time;\nuniform vec2 resolution;\nvarying vec2 vUv;\nvarying vec3 pos;\nvarying vec3 tex;\n\nvoid main() {\n\tvUv = uv;\n\tpos = vec3(position.x, position.y, position.z);\n\ttex = vec3(position.x, position.y, position.z);\n\t//pos = vec3(position.x + time * resolution.x, position.y + time * resolution.y, position.z);\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( pos, 1.0 );\n}";let i=new o.ShaderMaterial({uniforms:{time:{value:0},resolution:{value:new o.Vector2}},vertexShader:t,fragmentShader:e,side:o.DoubleSide,blending:o.SubtractiveBlending});i.depthWrite=!1,this.model.get("additive")&&(i.blending=o.AdditiveBlending);let n=new o.PlaneGeometry(1e4,1e4),s=new o.Mesh(n,i);s.position.x=0,s.position.y=0,s.position.z=0,this.scene.add(s)}else{t="uniform float time;\nuniform vec2 resolution;\nvarying vec2 vUv;\nvarying vec3 pos;\nvarying vec3 tex;\n\nvoid main() {\n\tvUv = uv;\n\tpos = vec3(position.x, position.y, position.z);\n\ttex = vec3(position.x, position.y, position.z);\n\t//pos = vec3(position.x + time * resolution.x, position.y + time * resolution.y, position.z);\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( pos, 1.0 );\n}";let i=new o.SphereBufferGeometry(.3),n=(new o.InstancedBufferGeometry).copy(i),s=120;n.maxInstancedCount=s;let r=[],a=[];for(let e=0;e<s;e++)a.push(0,0,0),r.push(.03*(e**1.1+.1),0,0);let d=new Float32Array(a);n.setAttribute("aCurve",new o.InstancedBufferAttribute(d,3,!1));let l=new Float32Array(r);n.setAttribute("aRadius",new o.InstancedBufferAttribute(l,3,!1)),this.instancedGeometry=n;let h=new o.ShaderMaterial({fragmentShader:e,vertexShader:"// Define the attributes\nvarying vec3 vColor;\nvarying vec3 tex;\nvarying vec2 vUv;\n\nattribute vec3 aRadius;\nattribute vec3 aCurve;\n\nvoid main(){\nvec3 transformed = position*aRadius.x*length(cameraPosition);\ntex = vec3(transformed.x, transformed.y, transformed.z) + cameraPosition;\n\n\n// 3. Get position and add it to the final position\n//vec3 curvePosition = vec3(aCurve.x, aCurve.y, aCurve.z);\n\n//transformed += curvePosition;\n\ngl_Position = projectionMatrix * modelViewMatrix * vec4(tex, 1.0);\n//vColor = aColor;\n//vPis = gl_position;\n}",uniforms:{time:{value:0},resolution:{value:new o.Vector2}},side:o.BackSide,blending:o.SubtractiveBlending});this.model.get("additive")&&(h.blending=o.AdditiveBlending),h.depthWrite=!1;let c=new o.InstancedMesh(n,h,s);c.instanceMatrix.needsUpdate=!0,this.scene.add(c)}}}var l=i(804),h=i(426),c=i(335),m=i(721),v=(i(546),i(441)),p=i(980);class u extends n.DOMWidgetModel{defaults(){return{...super.defaults(),_model_name:"SpotlightModel",_view_name:"SpotlightView",_model_module:"evince",_view_module:"evince",_model_module_version:"0.30.0",_view_module_version:"0.30.0"}}}class g extends n.DOMWidgetView{render(){const e=new o.Scene,t={};this.scene=e;let i=new o.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,1e3);this.camera=i,this.camera.position.z=5;const n=new o.WebGLRenderer;this.renderer=n,this.el.appendChild(r.N.createButton(this.renderer)),this.renderer.setAnimationLoop((function(){n.render(e,i)})),this.renderer.setSize(.5*window.innerWidth,.5*window.innerHeight);const a=new o.Color(this.model.get("bg_color")[0],this.model.get("bg_color")[1],this.model.get("bg_color")[2]);this.renderer.setClearColor(a,1),this.renderer.antialias=!0,this.renderer.xr.enabled=!0;let d=new s.z(this.camera,this.renderer.domElement);this.controls=d,this.init_changed(),this.el.append(this.renderer.domElement),this.el.appendChild(r.N.createButton(n)),this.pos_changed(),this.model.on("change:pos",this.pos_changed,this),this.model.on("change:init",this.init_changed,this);const u=new h.C(this.scene,this.camera),g=new l.xC(this.renderer);if(g.addPass(u),this.model.get("sao")){console.log("sao active");const e=new c.F(this.scene,this.camera,!0,!0);e.params.saoScale=this.model.get("saoScale"),e.params.saoBias=this.model.get("saoBias"),e.params.saoIntensity=this.model.get("saoIntensity"),console.log("sao render pass",e.renderToScreen),g.addPass(e)}if(this.model.get("dof")){console.log("dof active");const e=new m.A(this.scene,this.camera,{focus:this.model.get("focus"),aperture:this.model.get("aperture"),maxblur:this.model.get("max_blur"),width:window.innerWidth,height:window.innerHeight});console.log("dof render pass",e.renderToScreen),e.needsSwap=!0,g.addPass(e),t.bokeh=e}if(this.model.get("fxaa")){console.log("fxaa active");const e=new p.T(v.C);n.getPixelRatio(),e.uniforms.resolution.value.set(1/window.innerWidth,1/window.innerHeight),e.renderToScreen=!1,console.log("fxaa render pass",e.renderToScreen),g.addPass(e)}t.composer=g,this.renderer.autoClear=!1,n.setAnimationLoop((function(){t.composer.render()}))}init_changed(){console.log("init change"),this.pos=this.model.get("pos"),this.masses=this.model.get("masses"),this.colors=this.model.get("colors"),this.box=this.model.get("box"),this.bonds=this.model.get("bonds"),this.radius=this.model.get("radius");for(let e=0;e<this.pos.length;e++){let t=new o.SphereBufferGeometry(this.radius[e],20,10),i=new o.MeshStandardMaterial;i.color=new o.Color(this.colors[e][0],this.colors[e][1],this.colors[e][2]),i.roughness=.2,i.metalness=.2;let n=new o.Mesh(t,i);n.position.set(this.pos[e][0],this.pos[e][1],this.pos[e][2]),n.matrixAutoUpdate=!1,n.updateMatrix(),this.scene.add(n)}for(let n=0;n<this.bonds.length;n++){let s=this.pos[this.bonds[n][0]],r=this.pos[this.bonds[n][1]],a=new o.Vector3(s[0],s[1],s[2]),d=new o.Vector3(r[0],r[1],r[2]);var e=(new o.Vector3).subVectors(d,a);let l=new o.MeshStandardMaterial({color:5987163});l.roughness=.2,l.metalness=.2;var t=new o.CylinderGeometry(.4,.4,e.length(),6,4,!0);t.applyMatrix4((new o.Matrix4).makeRotationX(1.57075));var i=new o.Mesh(t,l);i.position.x=.5*(r[0]+s[0]),i.position.y=.5*(r[1]+s[1]),i.position.z=.5*(r[2]+s[2]),i.lookAt(d),this.scene.add(i)}let n=new o.AmbientLight(16777215,.5);this.scene.add(n);const s=new o.DirectionalLight(16777215,.5);s.position.set(1,1,1),this.scene.add(s)}pos_changed(){this.pos=this.model.get("pos");let e=this.scene.children[0],t=(new o.Matrix4,[]);if(this.box.length>2)for(let e=0;e<this.pos.length;e++)this.scene.children[e].position.set(this.pos[e][0],this.pos[e][1],this.pos[e][2]);if(2==this.box.length){for(let i=0;i<e.count;i++)t.push(this.pos[i][0],this.pos[i][1]);let i=new Float32Array(t);this.scene.children[0].geometry.setAttribute("aCurve",new o.InstancedBufferAttribute(i,2,!1))}}}class w extends n.DOMWidgetModel{defaults(){return{...super.defaults(),_model_name:"TemplateModel",_view_name:"TemplateView",_model_module:"evince",_view_module:"evince",_model_module_version:"0.30.0",_view_module_version:"0.30.0"}}}class f extends n.DOMWidgetView{render(){const e=new o.Scene;this.scene=e;let t=new o.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,1e3);this.camera=t,this.camera.position.z=5;const i=new o.WebGLRenderer;this.renderer=i,this.renderer.setSize(.5*window.innerWidth,.5*window.innerHeight),this.renderer.setClearColor(986927,1),this.renderer.antialias=!0;let n=new s.z(this.camera,this.renderer.domElement);this.controls=n,this.renderer.render(this.scene,this.camera),this.el.append(this.renderer.domElement);let r=new o.SphereBufferGeometry(1,20,10),a=new o.MeshStandardMaterial;a.roughness=.2,a.metalness=.2;let d=new o.Mesh(r,a);this.scene.add(d),this.value_changed(),this.model.on("change:value",this.value_changed,this),i.setAnimationLoop((function(){i.render(e,t)}))}value_changed(){}}const x={i8:"0.30.0"}},261:(e,t,i)=>{i.r(t),i.d(t,{BraketViewPlugin:()=>o,default:()=>s});var n=i(458);const o={id:"evince:plugin",requires:[i(672).IJupyterWidgetRegistry],activate:function(e,t){t.registerWidget({name:"evince",version:n.version,exports:{BraketModel:n.BraketModel,BraketView:n.BraketView}})},autoStart:!0},s=o}}]);