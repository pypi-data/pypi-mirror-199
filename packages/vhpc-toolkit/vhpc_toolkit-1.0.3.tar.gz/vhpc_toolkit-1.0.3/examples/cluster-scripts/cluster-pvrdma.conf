# Virtualized High Performance Computing Toolkit
# Example of creating a HPC compute cluster with PVRDMA networking,
# consisting of 8 compute VMs.
#
# Each compute VM is socket size (assuming pCPUs per host is 20) and mapped
# consecutively to hosts, two VMs per host.
#
# The configuration file will create a distributed virtual switch first
# based on RoCE RDMA HCA on ESXi hosts then add the PVRDMA network adapter type
# to VMs.
#
# The 8 VMs will be mapped to the hosts as:
#     vm     |            host
# ===========+===========================
# pvrdma-vm1 | vhpc-esx-05.hpc.vmware.com
# pvrdma-vm2 | vhpc-esx-06.hpc.vmware.com
# pvrdma-vm3 | vhpc-esx-07.hpc.vmware.com
# pvrdma-vm4 | vhpc-esx-08.hpc.vmware.com
# pvrdma-vm5 | vhpc-esx-05.hpc.vmware.com
# pvrdma-vm6 | vhpc-esx-06.hpc.vmware.com
# pvrdma-vm7 | vhpc-esx-07.hpc.vmware.com
# pvrdma-vm8 | vhpc-esx-08.hpc.vmware.com
#
# Modify the file according to your platform and needs

[BASE]
template: vhpc_clone
cpu: 10
memory: 50
datacenter: HPC_Datacenter
cluster: COMPUTE_GPU_Cluster
vm_folder:
resource_pool:
datastore: COMPUTE01_vsanDatastore
linked: 0

[NETWORK]
is_dhcp: false
port_group: vHPC-PG-VMNetwork
domain: hpc.vmware.com
netmask: 255.255.255.0
gateway: 172.1.101.1
dns: ['172.1.110.1', '172.1.110.2']

[PVRDMA]
pvrdma_port_group: pvrdma-pg
dvs_name:pvrdma-dvs

[LATENCY]
latency: high
cpu_reservation: true
memory_reservation: true

[HOST-LIST]
host: vhpc-esx-0{5:8}.hpc.vmware.com

[_DVS_]
pvrdma-dvs: pnic: vmnic5 HOST-LIST port_group: pvrdma-pg datacenter: HPC_Datacenter

[_VMS_]
pvrdma-vm{1:8}: BASE NETWORK LATENCY HOST-LIST PVRDMA ip: 172.1.10.{1:8}


