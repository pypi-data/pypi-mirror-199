{
	// Place your FeatMF workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Adjust python path (gimmick)": {
		"scope": "python",
		"prefix": ["pythpath","pypath"],
		"body": [
			"import os",
			"import sys",
			"from pathlib import Path",
			"# Set the \"./../src\" from the script folder",
			"dir_name = None",
			"try:",
			"\tdir_name = os.path.dirname(os.path.realpath(__file__))",
			"except NameError:",
			"\tprint(\"WARNING: __file__ not found, trying local\")",
			"\tdir_name = os.path.abspath('')",
			"lib_path = os.path.realpath(f\"{Path(dir_name).parent}/src\")",
			"# Add to path",
			"if lib_path not in sys.path:",
			"\tprint(f\"Adding library path: {lib_path} to PYTHONPATH\")",
			"\tsys.path.append(lib_path)",
			"else:",
			"\tprint(f\"Library path {lib_path} already in PYTHONPATH\")",
		]
	}
}