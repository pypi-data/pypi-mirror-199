"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _ETradeMsgID:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ETradeMsgIDEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ETradeMsgID.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    KTradeReqType_Unknown: _ETradeMsgID.ValueType  # 0
    """/ 未知"""
    KTradeReqType_PlaceOrder: _ETradeMsgID.ValueType  # 1
    """/ 委托"""
    KTradeReqType_CancelOrder: _ETradeMsgID.ValueType  # 2
    """/ 撤单"""
    KTradeRspType_OrdStatusReport: _ETradeMsgID.ValueType  # 3
    """/ 委托状态回报"""
    KTradeReqType_ExecReport: _ETradeMsgID.ValueType  # 4
    """/ 委托执行回报"""
    KTradeReqType_RejectCancelReport: _ETradeMsgID.ValueType  # 5
    """/ 撤单拒绝回报"""
    KTradeReqType_AccDepositReq: _ETradeMsgID.ValueType  # 21
    """////////////////////////////////////////////////////////////////
    / 入金请求
    """
    KTradeReqType_AccDepositAck: _ETradeMsgID.ValueType  # 22
    """/ 入金请求响应"""
    KTradeReqType_TradingAccQryReq: _ETradeMsgID.ValueType  # 23
    """/ 交易账户信息查询"""
    KTradeReqType_TradingAccQryAck: _ETradeMsgID.ValueType  # 24
    """/ 交易账户信息查询响应"""
    KQueryOrdersReq: _ETradeMsgID.ValueType  # 25
    """/ 委托查询"""
    KQueryOrdersAck: _ETradeMsgID.ValueType  # 26
    KQueryTradesReq: _ETradeMsgID.ValueType  # 29
    """/ 交易回报查询"""
    KQueryTradesAck: _ETradeMsgID.ValueType  # 30
    KQueryPositionsReq: _ETradeMsgID.ValueType  # 31
    """/ 持仓查询"""
    KQueryPositionsAck: _ETradeMsgID.ValueType  # 32
    KQueryHistoryOrdersReq: _ETradeMsgID.ValueType  # 33
    """/ 历史委托查询"""
    KQueryHistoryOrdersAck: _ETradeMsgID.ValueType  # 34
    KQueryHistoryTradesReq: _ETradeMsgID.ValueType  # 35
    """/ 历史交易回报查询"""
    KQueryHistoryTradesAck: _ETradeMsgID.ValueType  # 36
    KTradeReqType_QryHisAccReq: _ETradeMsgID.ValueType  # 37
    """/ 交易账户历史信息查询"""
    KTradeReqType_QryHisAccAck: _ETradeMsgID.ValueType  # 38
    """/ 交易账户历史信息查询响应"""
    KTradeReqType_QryHisDepositReq: _ETradeMsgID.ValueType  # 39
    """/ 历史入金信息查询"""
    KTradeReqType_QryHisDepositAck: _ETradeMsgID.ValueType  # 40
    """/ 历史入金信息查询响应"""
    KTradeReqType_QrySecurityStaticReq: _ETradeMsgID.ValueType  # 41
    """/ 标的静态信息查询请求，对应消息：trade中message QrySecurityStaticReq"""
    KTradeReqType_QrySecurityStaticAck: _ETradeMsgID.ValueType  # 42
    """/ 标的静态信息查询响应，对应消息：Thoth.Quote.Message.proto中 message SecurityInfoRsp"""
    KQueryHisPositionsReq: _ETradeMsgID.ValueType  # 43
    """/ 历史持仓查询"""
    KQueryHisPositionsAck: _ETradeMsgID.ValueType  # 44
    KVexchangeMsgID_RegisterReq: _ETradeMsgID.ValueType  # 80
    """/////////////////////////////////////////////////////////////////
    / 注册请求
    """
    KVexchangeMsgID_RegisterAck: _ETradeMsgID.ValueType  # 81
    """/ 注册响应"""
    KVexchangeMsgID_UnRegisterReq: _ETradeMsgID.ValueType  # 82
    """/ 注销请求"""
    KVexchangeMsgID_UnRegisterAck: _ETradeMsgID.ValueType  # 83
    """/ 注销请求响应"""
    KVexchangeMsgID_LoginReq: _ETradeMsgID.ValueType  # 84
    """/ 登录请求"""
    KVexchangeMsgID_LoginAck: _ETradeMsgID.ValueType  # 85
    """/ 登录响应"""
    KVexchangeMsgID_LogoutReq: _ETradeMsgID.ValueType  # 86
    """/ 登出请求"""
    KVexchangeMsgID_UserInfoQryReq: _ETradeMsgID.ValueType  # 87
    """/ 用户信息查询"""
    KVexchangeMsgID_UserInfoQryAck: _ETradeMsgID.ValueType  # 88
    """/ 用户信息查询响应"""
    KVexchangeMsgID_HeartBeatReq: _ETradeMsgID.ValueType  # 100
    """/ 心跳请求"""
    KVexchangeMsgID_HeartBeatAck: _ETradeMsgID.ValueType  # 101
    """/ 心跳响应"""
    KVexchangeMsgID_SessionControl: _ETradeMsgID.ValueType  # 102

class ETradeMsgID(_ETradeMsgID, metaclass=_ETradeMsgIDEnumTypeWrapper):
    """交易消息编号"""

KTradeReqType_Unknown: ETradeMsgID.ValueType  # 0
"""/ 未知"""
KTradeReqType_PlaceOrder: ETradeMsgID.ValueType  # 1
"""/ 委托"""
KTradeReqType_CancelOrder: ETradeMsgID.ValueType  # 2
"""/ 撤单"""
KTradeRspType_OrdStatusReport: ETradeMsgID.ValueType  # 3
"""/ 委托状态回报"""
KTradeReqType_ExecReport: ETradeMsgID.ValueType  # 4
"""/ 委托执行回报"""
KTradeReqType_RejectCancelReport: ETradeMsgID.ValueType  # 5
"""/ 撤单拒绝回报"""
KTradeReqType_AccDepositReq: ETradeMsgID.ValueType  # 21
"""////////////////////////////////////////////////////////////////
/ 入金请求
"""
KTradeReqType_AccDepositAck: ETradeMsgID.ValueType  # 22
"""/ 入金请求响应"""
KTradeReqType_TradingAccQryReq: ETradeMsgID.ValueType  # 23
"""/ 交易账户信息查询"""
KTradeReqType_TradingAccQryAck: ETradeMsgID.ValueType  # 24
"""/ 交易账户信息查询响应"""
KQueryOrdersReq: ETradeMsgID.ValueType  # 25
"""/ 委托查询"""
KQueryOrdersAck: ETradeMsgID.ValueType  # 26
KQueryTradesReq: ETradeMsgID.ValueType  # 29
"""/ 交易回报查询"""
KQueryTradesAck: ETradeMsgID.ValueType  # 30
KQueryPositionsReq: ETradeMsgID.ValueType  # 31
"""/ 持仓查询"""
KQueryPositionsAck: ETradeMsgID.ValueType  # 32
KQueryHistoryOrdersReq: ETradeMsgID.ValueType  # 33
"""/ 历史委托查询"""
KQueryHistoryOrdersAck: ETradeMsgID.ValueType  # 34
KQueryHistoryTradesReq: ETradeMsgID.ValueType  # 35
"""/ 历史交易回报查询"""
KQueryHistoryTradesAck: ETradeMsgID.ValueType  # 36
KTradeReqType_QryHisAccReq: ETradeMsgID.ValueType  # 37
"""/ 交易账户历史信息查询"""
KTradeReqType_QryHisAccAck: ETradeMsgID.ValueType  # 38
"""/ 交易账户历史信息查询响应"""
KTradeReqType_QryHisDepositReq: ETradeMsgID.ValueType  # 39
"""/ 历史入金信息查询"""
KTradeReqType_QryHisDepositAck: ETradeMsgID.ValueType  # 40
"""/ 历史入金信息查询响应"""
KTradeReqType_QrySecurityStaticReq: ETradeMsgID.ValueType  # 41
"""/ 标的静态信息查询请求，对应消息：trade中message QrySecurityStaticReq"""
KTradeReqType_QrySecurityStaticAck: ETradeMsgID.ValueType  # 42
"""/ 标的静态信息查询响应，对应消息：Thoth.Quote.Message.proto中 message SecurityInfoRsp"""
KQueryHisPositionsReq: ETradeMsgID.ValueType  # 43
"""/ 历史持仓查询"""
KQueryHisPositionsAck: ETradeMsgID.ValueType  # 44
KVexchangeMsgID_RegisterReq: ETradeMsgID.ValueType  # 80
"""/////////////////////////////////////////////////////////////////
/ 注册请求
"""
KVexchangeMsgID_RegisterAck: ETradeMsgID.ValueType  # 81
"""/ 注册响应"""
KVexchangeMsgID_UnRegisterReq: ETradeMsgID.ValueType  # 82
"""/ 注销请求"""
KVexchangeMsgID_UnRegisterAck: ETradeMsgID.ValueType  # 83
"""/ 注销请求响应"""
KVexchangeMsgID_LoginReq: ETradeMsgID.ValueType  # 84
"""/ 登录请求"""
KVexchangeMsgID_LoginAck: ETradeMsgID.ValueType  # 85
"""/ 登录响应"""
KVexchangeMsgID_LogoutReq: ETradeMsgID.ValueType  # 86
"""/ 登出请求"""
KVexchangeMsgID_UserInfoQryReq: ETradeMsgID.ValueType  # 87
"""/ 用户信息查询"""
KVexchangeMsgID_UserInfoQryAck: ETradeMsgID.ValueType  # 88
"""/ 用户信息查询响应"""
KVexchangeMsgID_HeartBeatReq: ETradeMsgID.ValueType  # 100
"""/ 心跳请求"""
KVexchangeMsgID_HeartBeatAck: ETradeMsgID.ValueType  # 101
"""/ 心跳响应"""
KVexchangeMsgID_SessionControl: ETradeMsgID.ValueType  # 102
global___ETradeMsgID = ETradeMsgID

class _ESessionStatus:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ESessionStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ESessionStatus.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    KSessionStatus_UnKnown: _ESessionStatus.ValueType  # 0
    KSessionStatus_Connected: _ESessionStatus.ValueType  # 1
    KSessionStatus_Closed: _ESessionStatus.ValueType  # 2
    KSessionStatus_Disconnected: _ESessionStatus.ValueType  # 3

class ESessionStatus(_ESessionStatus, metaclass=_ESessionStatusEnumTypeWrapper): ...

KSessionStatus_UnKnown: ESessionStatus.ValueType  # 0
KSessionStatus_Connected: ESessionStatus.ValueType  # 1
KSessionStatus_Closed: ESessionStatus.ValueType  # 2
KSessionStatus_Disconnected: ESessionStatus.ValueType  # 3
global___ESessionStatus = ESessionStatus

class _ERegisterRet:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ERegisterRetEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ERegisterRet.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    KRegisterRet_Unknown: _ERegisterRet.ValueType  # 0
    """/ 未知错误"""
    KRegisterRet_Success: _ERegisterRet.ValueType  # 1
    """/ 注册成功"""
    KRegisterRet_ReRegister: _ERegisterRet.ValueType  # 2
    """/ 重复注册"""
    KRegisterRet_InvalidStrategy: _ERegisterRet.ValueType  # 3
    """/ 无效或非法 strategy_id"""

class ERegisterRet(_ERegisterRet, metaclass=_ERegisterRetEnumTypeWrapper): ...

KRegisterRet_Unknown: ERegisterRet.ValueType  # 0
"""/ 未知错误"""
KRegisterRet_Success: ERegisterRet.ValueType  # 1
"""/ 注册成功"""
KRegisterRet_ReRegister: ERegisterRet.ValueType  # 2
"""/ 重复注册"""
KRegisterRet_InvalidStrategy: ERegisterRet.ValueType  # 3
"""/ 无效或非法 strategy_id"""
global___ERegisterRet = ERegisterRet

class _EAccStatus:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _EAccStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_EAccStatus.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    KAccStatus_Unknown: _EAccStatus.ValueType  # 0
    KAccStatus_Normal: _EAccStatus.ValueType  # 1
    """/ 正常"""
    KAccStatus_WrittenOff: _EAccStatus.ValueType  # 2
    """/ 已注销"""
    KAccStatus_Disable: _EAccStatus.ValueType  # 3
    """/ 已禁用"""

class EAccStatus(_EAccStatus, metaclass=_EAccStatusEnumTypeWrapper): ...

KAccStatus_Unknown: EAccStatus.ValueType  # 0
KAccStatus_Normal: EAccStatus.ValueType  # 1
"""/ 正常"""
KAccStatus_WrittenOff: EAccStatus.ValueType  # 2
"""/ 已注销"""
KAccStatus_Disable: EAccStatus.ValueType  # 3
"""/ 已禁用"""
global___EAccStatus = EAccStatus

class _EDepositRetCode:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _EDepositRetCodeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_EDepositRetCode.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    KDepositReCode_Unknown: _EDepositRetCode.ValueType  # 0
    KDepositReCode_NoError: _EDepositRetCode.ValueType  # 1
    KDepositReCode_NoEnoughCash: _EDepositRetCode.ValueType  # 2
    """资金不足"""
    KDepositReCode_CapitalOverrun: _EDepositRetCode.ValueType  # 3
    """资金超限9*10^17(added 20170410)"""
    KDepositReCode_IllegalAccount: _EDepositRetCode.ValueType  # 4
    """非法交易账号(added 20170518)"""
    KDepositReCode_IllegalPara: _EDepositRetCode.ValueType  # 5
    """请求参数错误(amount==0, type is unknow)"""

class EDepositRetCode(_EDepositRetCode, metaclass=_EDepositRetCodeEnumTypeWrapper):
    """enum EDepositType
    {
       KEDepositType_Unknown       = 0;
       KEDepositType_deposit       = 1; // 入金
       KEDepositType_withdraw      = 2; // 出金
    }
    """

KDepositReCode_Unknown: EDepositRetCode.ValueType  # 0
KDepositReCode_NoError: EDepositRetCode.ValueType  # 1
KDepositReCode_NoEnoughCash: EDepositRetCode.ValueType  # 2
"""资金不足"""
KDepositReCode_CapitalOverrun: EDepositRetCode.ValueType  # 3
"""资金超限9*10^17(added 20170410)"""
KDepositReCode_IllegalAccount: EDepositRetCode.ValueType  # 4
"""非法交易账号(added 20170518)"""
KDepositReCode_IllegalPara: EDepositRetCode.ValueType  # 5
"""请求参数错误(amount==0, type is unknow)"""
global___EDepositRetCode = EDepositRetCode

class _ELoginRetCode:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ELoginRetCodeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ELoginRetCode.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    KLoginReCode_Unknown: _ELoginRetCode.ValueType  # 0
    """未知错误"""
    KLoginReCode_LoginSucc: _ELoginRetCode.ValueType  # 1
    """登录成功"""
    KLoginReCode_UnknownAcc: _ELoginRetCode.ValueType  # 2
    """未知账号 或 密码错误"""
    KLoginReCode_AccUnNormal: _ELoginRetCode.ValueType  # 3
    """非正常状态的账号(已注销/已禁用)"""

class ELoginRetCode(_ELoginRetCode, metaclass=_ELoginRetCodeEnumTypeWrapper): ...

KLoginReCode_Unknown: ELoginRetCode.ValueType  # 0
"""未知错误"""
KLoginReCode_LoginSucc: ELoginRetCode.ValueType  # 1
"""登录成功"""
KLoginReCode_UnknownAcc: ELoginRetCode.ValueType  # 2
"""未知账号 或 密码错误"""
KLoginReCode_AccUnNormal: ELoginRetCode.ValueType  # 3
"""非正常状态的账号(已注销/已禁用)"""
global___ELoginRetCode = ELoginRetCode

class _EBusinessType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _EBusinessTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_EBusinessType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    KBusinessType_Unknown: _EBusinessType.ValueType  # 0
    KBusinessType_NORMAL: _EBusinessType.ValueType  # 1
    """/ 普通交易"""

class EBusinessType(_EBusinessType, metaclass=_EBusinessTypeEnumTypeWrapper):
    """/////////////////////////////////////////////////////////////
    业务类型(证券)
    """

KBusinessType_Unknown: EBusinessType.ValueType  # 0
KBusinessType_NORMAL: EBusinessType.ValueType  # 1
"""/ 普通交易"""
global___EBusinessType = EBusinessType

class _EOrderSide:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _EOrderSideEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_EOrderSide.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    KOrderDirection_Unknown: _EOrderSide.ValueType  # 0
    KOrderDirection_Buy: _EOrderSide.ValueType  # 49
    """'1'买"""
    KOrderDirection_Sell: _EOrderSide.ValueType  # 50
    """'2'卖"""
    KOrderDirection_Call: _EOrderSide.ValueType  # 68
    """'D' 认购"""
    KOrderDirection_Callable: _EOrderSide.ValueType  # 69
    """'E' 赎回"""
    KOrderDirection_FinancingToBuy: _EOrderSide.ValueType  # 70
    """'F' 融资买入(融入或出借)"""
    KOrderDirection_FinancingToSell: _EOrderSide.ValueType  # 71
    """'G' 融资卖出(融出或借入)"""

class EOrderSide(_EOrderSide, metaclass=_EOrderSideEnumTypeWrapper):
    """买卖方向"""

KOrderDirection_Unknown: EOrderSide.ValueType  # 0
KOrderDirection_Buy: EOrderSide.ValueType  # 49
"""'1'买"""
KOrderDirection_Sell: EOrderSide.ValueType  # 50
"""'2'卖"""
KOrderDirection_Call: EOrderSide.ValueType  # 68
"""'D' 认购"""
KOrderDirection_Callable: EOrderSide.ValueType  # 69
"""'E' 赎回"""
KOrderDirection_FinancingToBuy: EOrderSide.ValueType  # 70
"""'F' 融资买入(融入或出借)"""
KOrderDirection_FinancingToSell: EOrderSide.ValueType  # 71
"""'G' 融资卖出(融出或借入)"""
global___EOrderSide = EOrderSide

class _EPositionEffect:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _EPositionEffectEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_EPositionEffect.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    KPositionEffect_Unknown: _EPositionEffect.ValueType  # 0
    KPositionEffect_Open: _EPositionEffect.ValueType  # 48
    """'0';开仓"""
    KPositionEffect_Close: _EPositionEffect.ValueType  # 49
    """'1';平仓"""
    KPositionEffect_ForceClose: _EPositionEffect.ValueType  # 50
    """'2';强平"""
    KPositionEffect_CloseToday: _EPositionEffect.ValueType  # 51
    """'3';平今"""
    KPositionEffect_CloseYesterday: _EPositionEffect.ValueType  # 52
    """'4';平昨"""

class EPositionEffect(_EPositionEffect, metaclass=_EPositionEffectEnumTypeWrapper):
    """开平方向"""

KPositionEffect_Unknown: EPositionEffect.ValueType  # 0
KPositionEffect_Open: EPositionEffect.ValueType  # 48
"""'0';开仓"""
KPositionEffect_Close: EPositionEffect.ValueType  # 49
"""'1';平仓"""
KPositionEffect_ForceClose: EPositionEffect.ValueType  # 50
"""'2';强平"""
KPositionEffect_CloseToday: EPositionEffect.ValueType  # 51
"""'3';平今"""
KPositionEffect_CloseYesterday: EPositionEffect.ValueType  # 52
"""'4';平昨"""
global___EPositionEffect = EPositionEffect

class _EOrderType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _EOrderTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_EOrderType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    KOrderType_Unknown: _EOrderType.ValueType  # 0
    KOrderType_Market: _EOrderType.ValueType  # 1
    """市价(market)"""
    KOrderType_Limit: _EOrderType.ValueType  # 2
    """限价委托"""
    KOrderType_Stop: _EOrderType.ValueType  # 4
    """止损"""
    KOrderType_Best_5_Then_Cancel: _EOrderType.ValueType  # 7
    """市价最优五档剩余撤销(best 5 then cancel)"""
    KOrderType_Best_5_Then_Limit: _EOrderType.ValueType  # 8
    """市价最优五档剩余转限价(best 5 then limit)"""
    KOrderType_Immediately_Or_Cancel: _EOrderType.ValueType  # 9
    """市价即时成交剩余撤销(immediately or cancel)"""
    KOrderType_All_Or_Cancel: _EOrderType.ValueType  # 10
    """市价即时全部成交或撤销(immediately or cancel)"""
    KOrderType_Market_Then_Limit: _EOrderType.ValueType  # 75
    """'K'市价剩余转限价(market then limit)"""
    KOrderType_Best_Of_Party: _EOrderType.ValueType  # 85
    """'U'本方最优价格(best of party)"""
    KOrderType_Best_Of_Conterparty: _EOrderType.ValueType  # 86
    """'V'对方最优价格(best of counterparty)"""

class EOrderType(_EOrderType, metaclass=_EOrderTypeEnumTypeWrapper):
    """价格类型"""

KOrderType_Unknown: EOrderType.ValueType  # 0
KOrderType_Market: EOrderType.ValueType  # 1
"""市价(market)"""
KOrderType_Limit: EOrderType.ValueType  # 2
"""限价委托"""
KOrderType_Stop: EOrderType.ValueType  # 4
"""止损"""
KOrderType_Best_5_Then_Cancel: EOrderType.ValueType  # 7
"""市价最优五档剩余撤销(best 5 then cancel)"""
KOrderType_Best_5_Then_Limit: EOrderType.ValueType  # 8
"""市价最优五档剩余转限价(best 5 then limit)"""
KOrderType_Immediately_Or_Cancel: EOrderType.ValueType  # 9
"""市价即时成交剩余撤销(immediately or cancel)"""
KOrderType_All_Or_Cancel: EOrderType.ValueType  # 10
"""市价即时全部成交或撤销(immediately or cancel)"""
KOrderType_Market_Then_Limit: EOrderType.ValueType  # 75
"""'K'市价剩余转限价(market then limit)"""
KOrderType_Best_Of_Party: EOrderType.ValueType  # 85
"""'U'本方最优价格(best of party)"""
KOrderType_Best_Of_Conterparty: EOrderType.ValueType  # 86
"""'V'对方最优价格(best of counterparty)"""
global___EOrderType = EOrderType

class _EOrderStatus:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _EOrderStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_EOrderStatus.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    KOrderStatus_Unknown: _EOrderStatus.ValueType  # 0
    """未知"""
    KOrderStatus_New: _EOrderStatus.ValueType  # 1
    """已报"""
    KOrderStatus_PartiallyFilled: _EOrderStatus.ValueType  # 2
    """部成"""
    KOrderStatus_Filled: _EOrderStatus.ValueType  # 3
    """已成"""
    KOrderStatus_DoneForDay: _EOrderStatus.ValueType  # 4
    """当日已完成"""
    KOrderStatus_Canceled: _EOrderStatus.ValueType  # 5
    """已撤"""
    KOrderStatus_PendingCancel: _EOrderStatus.ValueType  # 6
    """待撤"""
    KOrderStatus_Stopped: _EOrderStatus.ValueType  # 7
    """停止"""
    KOrderStatus_Rejected: _EOrderStatus.ValueType  # 8
    """拒绝"""
    KOrderStatus_Suspended: _EOrderStatus.ValueType  # 9
    """挂起"""
    KOrderStatus_PendingNew: _EOrderStatus.ValueType  # 65
    """'A'待报"""
    KOrderStatus_Calculated: _EOrderStatus.ValueType  # 66
    """'B'计算"""
    KOrderStatus_Expired: _EOrderStatus.ValueType  # 67
    """'C'已过期"""
    KOrderStatus_AcceptedForBidding: _EOrderStatus.ValueType  # 68
    """'D'接受竞价"""
    KOrderStatus_PendingReplace: _EOrderStatus.ValueType  # 69
    """'E'待修改"""

class EOrderStatus(_EOrderStatus, metaclass=_EOrderStatusEnumTypeWrapper):
    """委托状态定义"""

KOrderStatus_Unknown: EOrderStatus.ValueType  # 0
"""未知"""
KOrderStatus_New: EOrderStatus.ValueType  # 1
"""已报"""
KOrderStatus_PartiallyFilled: EOrderStatus.ValueType  # 2
"""部成"""
KOrderStatus_Filled: EOrderStatus.ValueType  # 3
"""已成"""
KOrderStatus_DoneForDay: EOrderStatus.ValueType  # 4
"""当日已完成"""
KOrderStatus_Canceled: EOrderStatus.ValueType  # 5
"""已撤"""
KOrderStatus_PendingCancel: EOrderStatus.ValueType  # 6
"""待撤"""
KOrderStatus_Stopped: EOrderStatus.ValueType  # 7
"""停止"""
KOrderStatus_Rejected: EOrderStatus.ValueType  # 8
"""拒绝"""
KOrderStatus_Suspended: EOrderStatus.ValueType  # 9
"""挂起"""
KOrderStatus_PendingNew: EOrderStatus.ValueType  # 65
"""'A'待报"""
KOrderStatus_Calculated: EOrderStatus.ValueType  # 66
"""'B'计算"""
KOrderStatus_Expired: EOrderStatus.ValueType  # 67
"""'C'已过期"""
KOrderStatus_AcceptedForBidding: EOrderStatus.ValueType  # 68
"""'D'接受竞价"""
KOrderStatus_PendingReplace: EOrderStatus.ValueType  # 69
"""'E'待修改"""
global___EOrderStatus = EOrderStatus

class _EExecType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _EExecTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_EExecType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    KExecType_Unknown: _EExecType.ValueType  # 0
    """未知"""
    KExecType_New: _EExecType.ValueType  # 1
    """已报"""
    KExecType_DoneForDay: _EExecType.ValueType  # 3
    """当日已完成"""
    KExecType_Canceled: _EExecType.ValueType  # 4
    """已撤销"""
    KExecType_Replaced: _EExecType.ValueType  # 5
    """已修改"""
    KExecType_PendingCancel: _EExecType.ValueType  # 6
    """待撤销"""
    KExecType_Stopped: _EExecType.ValueType  # 7
    """已停止(已终止)"""
    KExecType_Rejected: _EExecType.ValueType  # 8
    """已拒绝"""
    KExecType_Suspended: _EExecType.ValueType  # 9
    """挂起(已延缓)"""
    KExecType_PendingNew: _EExecType.ValueType  # 65
    """'A' 待报"""
    KExecType_Calculated: _EExecType.ValueType  # 66
    """'B' 已计算"""
    KExecType_Expired: _EExecType.ValueType  # 67
    """'C' 过期"""
    KExecType_Restated: _EExecType.ValueType  # 68
    """'D' 重置(主动发送)"""
    KExecType_PendingReplace: _EExecType.ValueType  # 69
    """'E' 待修改"""
    KExecType_Trade: _EExecType.ValueType  # 70
    """'F' 成交或部分成交"""
    KExecType_TradeCorrect: _EExecType.ValueType  # 71
    """'G' 成交更正"""
    KExecType_TradeCancel: _EExecType.ValueType  # 72
    """'H' 成交撤销"""
    KExecType_OrderStatus: _EExecType.ValueType  # 73
    """'I' 委托状态"""

class EExecType(_EExecType, metaclass=_EExecTypeEnumTypeWrapper):
    """成交回报类型"""

KExecType_Unknown: EExecType.ValueType  # 0
"""未知"""
KExecType_New: EExecType.ValueType  # 1
"""已报"""
KExecType_DoneForDay: EExecType.ValueType  # 3
"""当日已完成"""
KExecType_Canceled: EExecType.ValueType  # 4
"""已撤销"""
KExecType_Replaced: EExecType.ValueType  # 5
"""已修改"""
KExecType_PendingCancel: EExecType.ValueType  # 6
"""待撤销"""
KExecType_Stopped: EExecType.ValueType  # 7
"""已停止(已终止)"""
KExecType_Rejected: EExecType.ValueType  # 8
"""已拒绝"""
KExecType_Suspended: EExecType.ValueType  # 9
"""挂起(已延缓)"""
KExecType_PendingNew: EExecType.ValueType  # 65
"""'A' 待报"""
KExecType_Calculated: EExecType.ValueType  # 66
"""'B' 已计算"""
KExecType_Expired: EExecType.ValueType  # 67
"""'C' 过期"""
KExecType_Restated: EExecType.ValueType  # 68
"""'D' 重置(主动发送)"""
KExecType_PendingReplace: EExecType.ValueType  # 69
"""'E' 待修改"""
KExecType_Trade: EExecType.ValueType  # 70
"""'F' 成交或部分成交"""
KExecType_TradeCorrect: EExecType.ValueType  # 71
"""'G' 成交更正"""
KExecType_TradeCancel: EExecType.ValueType  # 72
"""'H' 成交撤销"""
KExecType_OrderStatus: EExecType.ValueType  # 73
"""'I' 委托状态"""
global___EExecType = EExecType

class _ECxRejReasonType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ECxRejReasonTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ECxRejReasonType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    KCxRejReasonType_TooLateCancel: _ECxRejReasonType.ValueType  # 0
    """/ 撤单太晚（Too late to cancel）"""
    KCxRejReasonType_UnknowOrder: _ECxRejReasonType.ValueType  # 1
    """/ 未知订单（Unknown order）"""
    KCxRejReasonType_Broker: _ECxRejReasonType.ValueType  # 2
    """/ 自选原因（Broker / Exchange Option）"""
    KCxRejReasonType_PendingCancel: _ECxRejReasonType.ValueType  # 3
    """/ 正在撤消（Order already in Pending Cancel or Pending Replace status）"""
    KCxRejReasonType_Duplicate: _ECxRejReasonType.ValueType  # 6
    """/ 收到重复单（Duplicate ClOrdID received）"""
    KCxRejReasonType_Other: _ECxRejReasonType.ValueType  # 99
    """/ 其他（other）"""

class ECxRejReasonType(_ECxRejReasonType, metaclass=_ECxRejReasonTypeEnumTypeWrapper):
    """撤单拒绝原因类型"""

KCxRejReasonType_TooLateCancel: ECxRejReasonType.ValueType  # 0
"""/ 撤单太晚（Too late to cancel）"""
KCxRejReasonType_UnknowOrder: ECxRejReasonType.ValueType  # 1
"""/ 未知订单（Unknown order）"""
KCxRejReasonType_Broker: ECxRejReasonType.ValueType  # 2
"""/ 自选原因（Broker / Exchange Option）"""
KCxRejReasonType_PendingCancel: ECxRejReasonType.ValueType  # 3
"""/ 正在撤消（Order already in Pending Cancel or Pending Replace status）"""
KCxRejReasonType_Duplicate: ECxRejReasonType.ValueType  # 6
"""/ 收到重复单（Duplicate ClOrdID received）"""
KCxRejReasonType_Other: ECxRejReasonType.ValueType  # 99
"""/ 其他（other）"""
global___ECxRejReasonType = ECxRejReasonType

class _EOrderRejectReason:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _EOrderRejectReasonEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_EOrderRejectReason.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    KOrderRejectReason_NoError: _EOrderRejectReason.ValueType  # 0
    KOrdRejReason_UnknownSymbol: _EOrderRejectReason.ValueType  # 1
    """//////////////////////////////////////////////////////////////////
    / 证券代码非法（Unknown symbol）
    """
    KOrdRejReason_ExchangeClosed: _EOrderRejectReason.ValueType  # 2
    """/ 交易关闭（Exchange closed）"""
    KOrdRejReason_OrdExceedsLimit: _EOrderRejectReason.ValueType  # 3
    """/ 订单超过限价（Order exceeds limit）"""
    KOrdRejReason_TooLateEnter: _EOrderRejectReason.ValueType  # 4
    """/ 订单太迟（Too late to enter）"""
    KOrdRejReason_UnknowOrd: _EOrderRejectReason.ValueType  # 5
    """/ 未知订单（Unknown Order）"""
    KOrdRejReason_DuplicateOrd: _EOrderRejectReason.ValueType  # 6
    """/ 重复订单（ Duplicate Order (e.g. dupe ClOrdID)）"""
    KOrdRejReason_StaleOrd: _EOrderRejectReason.ValueType  # 8
    """/ 失效订单（Stale Order）"""
    KOrdRejReason_InvalidAcc: _EOrderRejectReason.ValueType  # 10
    """/ 无效账户（Invalid Investor ID）"""
    KOrdRejReason_UnsupportedOrdChara: _EOrderRejectReason.ValueType  # 11
    """/ 不支持的订单特征（Unsupported order characteristic）"""
    KOrdRejReason_IncorrectQty: _EOrderRejectReason.ValueType  # 13
    """/ 数量错误（Incorrect quantity）"""
    KOrdRejReason_UnknownAcc: _EOrderRejectReason.ValueType  # 15
    """/ 未知账号（Unknown account(s)）"""
    KOrdRejReason_NotEnoughPosition: _EOrderRejectReason.ValueType  # 16
    """/ 持仓不足"""
    KOrdRejReason_QtyNonMultipleBuyUnit: _EOrderRejectReason.ValueType  # 103
    """/ 买订单数量不是SJSXX.XXBLDW 的整数倍"""
    KOrdRejReason_SecuritiesTrading: _EOrderRejectReason.ValueType  # 102
    """/ 证券停牌(获取行情失败)"""
    KOrdRejReason_PriceNonMultipleTick: _EOrderRejectReason.ValueType  # 106
    """/ 委托价格不是SJSXX.XXJGDW 的整数倍"""
    KOrdRejReason_IllegalEntrustedBusiness: _EOrderRejectReason.ValueType  # 108
    """/ 非法的委托业务"""
    KOrdRejReason_LackDeposit: _EOrderRejectReason.ValueType  # 117
    """/ 参与者业务单元资金可用量不足"""
    KOrdRejReason_PriceError: _EOrderRejectReason.ValueType  # 125
    """/ 价格错误"""
    KOrdRejReason_InvalidBusinessCategory: _EOrderRejectReason.ValueType  # 148
    """/ 无效业务类别(order_type)"""
    KOrdRejReason_NonTradingTime: _EOrderRejectReason.ValueType  # 204
    """/ 非交易时间（This stock is not in tradinghours）"""
    KOrdRejReason_PriceZero: _EOrderRejectReason.ValueType  # 219
    """/ 申报价不能为零（Price may not be 0 fora limit order）"""

class EOrderRejectReason(_EOrderRejectReason, metaclass=_EOrderRejectReasonEnumTypeWrapper):
    """委托拒绝原因--参考《证券交易数据交换协议》--TAG：103， OrdRejReason,订单拒绝原因，key保持一致"""

KOrderRejectReason_NoError: EOrderRejectReason.ValueType  # 0
KOrdRejReason_UnknownSymbol: EOrderRejectReason.ValueType  # 1
"""//////////////////////////////////////////////////////////////////
/ 证券代码非法（Unknown symbol）
"""
KOrdRejReason_ExchangeClosed: EOrderRejectReason.ValueType  # 2
"""/ 交易关闭（Exchange closed）"""
KOrdRejReason_OrdExceedsLimit: EOrderRejectReason.ValueType  # 3
"""/ 订单超过限价（Order exceeds limit）"""
KOrdRejReason_TooLateEnter: EOrderRejectReason.ValueType  # 4
"""/ 订单太迟（Too late to enter）"""
KOrdRejReason_UnknowOrd: EOrderRejectReason.ValueType  # 5
"""/ 未知订单（Unknown Order）"""
KOrdRejReason_DuplicateOrd: EOrderRejectReason.ValueType  # 6
"""/ 重复订单（ Duplicate Order (e.g. dupe ClOrdID)）"""
KOrdRejReason_StaleOrd: EOrderRejectReason.ValueType  # 8
"""/ 失效订单（Stale Order）"""
KOrdRejReason_InvalidAcc: EOrderRejectReason.ValueType  # 10
"""/ 无效账户（Invalid Investor ID）"""
KOrdRejReason_UnsupportedOrdChara: EOrderRejectReason.ValueType  # 11
"""/ 不支持的订单特征（Unsupported order characteristic）"""
KOrdRejReason_IncorrectQty: EOrderRejectReason.ValueType  # 13
"""/ 数量错误（Incorrect quantity）"""
KOrdRejReason_UnknownAcc: EOrderRejectReason.ValueType  # 15
"""/ 未知账号（Unknown account(s)）"""
KOrdRejReason_NotEnoughPosition: EOrderRejectReason.ValueType  # 16
"""/ 持仓不足"""
KOrdRejReason_QtyNonMultipleBuyUnit: EOrderRejectReason.ValueType  # 103
"""/ 买订单数量不是SJSXX.XXBLDW 的整数倍"""
KOrdRejReason_SecuritiesTrading: EOrderRejectReason.ValueType  # 102
"""/ 证券停牌(获取行情失败)"""
KOrdRejReason_PriceNonMultipleTick: EOrderRejectReason.ValueType  # 106
"""/ 委托价格不是SJSXX.XXJGDW 的整数倍"""
KOrdRejReason_IllegalEntrustedBusiness: EOrderRejectReason.ValueType  # 108
"""/ 非法的委托业务"""
KOrdRejReason_LackDeposit: EOrderRejectReason.ValueType  # 117
"""/ 参与者业务单元资金可用量不足"""
KOrdRejReason_PriceError: EOrderRejectReason.ValueType  # 125
"""/ 价格错误"""
KOrdRejReason_InvalidBusinessCategory: EOrderRejectReason.ValueType  # 148
"""/ 无效业务类别(order_type)"""
KOrdRejReason_NonTradingTime: EOrderRejectReason.ValueType  # 204
"""/ 非交易时间（This stock is not in tradinghours）"""
KOrdRejReason_PriceZero: EOrderRejectReason.ValueType  # 219
"""/ 申报价不能为零（Price may not be 0 fora limit order）"""
global___EOrderRejectReason = EOrderRejectReason
