# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Thoth.Quote.Message.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import any_pb2 as google_dot_protobuf_dot_any__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x19Thoth.Quote.Message.proto\x12\x0bThoth.Quote\x1a\x19google/protobuf/any.proto\"-\n\x0fQuoteSymbolsMsg\x12\x1a\n\x12\x65xchange_securitys\x18\x01 \x01(\t\"Y\n\x13QuoteSubscribeUnAck\x12\x14\n\x0cmarket_codes\x18\x01 \x01(\t\x12,\n\x08ret_code\x18\x02 \x01(\x0e\x32\x1a.Thoth.Quote.EQuoteRetCode\"P\n\x0fSecurityInfoRsp\x12=\n\x14security_static_info\x18\x01 \x03(\x0b\x32\x1f.Thoth.Quote.SecurityStaticInfo\"\x84\x02\n\x12SecurityStaticInfo\x12\x0e\n\x06market\x18\x01 \x01(\t\x12\x0c\n\x04\x63ode\x18\x02 \x01(\t\x12\x15\n\rsecurity_name\x18\x03 \x01(\t\x12\x31\n\rsecurity_type\x18\x04 \x01(\x0e\x32\x1a.Thoth.Quote.ESecurityType\x12\x12\n\nprice_tick\x18\x0b \x01(\x05\x12\x14\n\x0c\x62uy_qty_unit\x18\x0c \x01(\x05\x12\x15\n\rsell_qty_unit\x18\r \x01(\x05\x12(\n\nextra_data\x18\x14 \x01(\x0b\x32\x14.google.protobuf.Any\x12\x1b\n\x13price_decimal_place\x18\x1e \x01(\x05\"\xac\x03\n\x11SecurityExtraData\x12\x12\n\nproduct_id\x18\x01 \x01(\t\x12\x14\n\x0cproduct_name\x18\x02 \x01(\t\x12\x14\n\x0coptions_type\x18\x03 \x01(\t\x12\x15\n\rdelivery_year\x18\x04 \x01(\t\x12\x16\n\x0e\x64\x65livery_month\x18\x05 \x01(\t\x12\x1a\n\x12is_max_margin_side\x18\x06 \x01(\x08\x12\x11\n\topen_date\x18\x07 \x01(\t\x12\x13\n\x0b\x65xpire_date\x18\x08 \x01(\t\x12\x10\n\x08multiple\x18\n \x01(\x05\x12\x19\n\x11long_margin_ratio\x18\x0b \x01(\x05\x12\x1a\n\x12short_margin_ratio\x18\x0c \x01(\x05\x12\x14\n\x0cstrike_price\x18\r \x01(\x03\x12\x19\n\x11max_market_volume\x18\x0e \x01(\x03\x12\x19\n\x11min_market_volume\x18\x0f \x01(\x03\x12\x18\n\x10max_limit_volume\x18\x10 \x01(\x03\x12\x18\n\x10min_limit_volume\x18\x11 \x01(\x03\x12\x1b\n\x13ratio_decimal_place\x18\x1e \x01(\x05\"\x1a\n\tTimeStamp\x12\r\n\x05ptime\x18\x01 \x01(\t\"\xa8\x06\n\x0cQuoteBaseMsg\x12\x0e\n\x06market\x18\x01 \x01(\t\x12\x0c\n\x04\x63ode\x18\x02 \x01(\t\x12\x31\n\rsecurity_type\x18\x03 \x01(\x0e\x32\x1a.Thoth.Quote.ESecurityType\x12\x0c\n\x04open\x18\x0b \x01(\x03\x12\x0c\n\x04high\x18\x0c \x01(\x03\x12\x0b\n\x03low\x18\r \x01(\x03\x12\x0c\n\x04last\x18\x0e \x01(\x03\x12\x11\n\tpre_close\x18\x0f \x01(\x03\x12\r\n\x05\x63lose\x18\x10 \x01(\x03\x12\x13\n\x0bupper_limit\x18\x11 \x01(\x03\x12\x13\n\x0blower_limit\x18\x12 \x01(\x03\x12\x14\n\x0ctotal_amount\x18\x16 \x01(\x03\x12\x13\n\x0blast_volume\x18\x17 \x01(\x03\x12\x11\n\tavg_price\x18\x18 \x01(\x03\x12:\n\tbid_price\x18# \x03(\x0b\x32\'.Thoth.Quote.QuoteBaseMsg.BidPriceEntry\x12:\n\task_price\x18$ \x03(\x0b\x32\'.Thoth.Quote.QuoteBaseMsg.AskPriceEntry\x12<\n\nbid_volume\x18% \x03(\x0b\x32(.Thoth.Quote.QuoteBaseMsg.BidVolumeEntry\x12<\n\nask_volume\x18& \x03(\x0b\x32(.Thoth.Quote.QuoteBaseMsg.AskVolumeEntry\x12\x11\n\tdata_time\x18\' \x01(\t\x12\x1b\n\x13price_decimal_place\x18\x65 \x01(\x05\x12\x1c\n\x14\x61mount_decimal_place\x18\x66 \x01(\x05\x1a/\n\rBidPriceEntry\x12\x0b\n\x03key\x18\x01 \x01(\x05\x12\r\n\x05value\x18\x02 \x01(\x03:\x02\x38\x01\x1a/\n\rAskPriceEntry\x12\x0b\n\x03key\x18\x01 \x01(\x05\x12\r\n\x05value\x18\x02 \x01(\x03:\x02\x38\x01\x1a\x30\n\x0e\x42idVolumeEntry\x12\x0b\n\x03key\x18\x01 \x01(\x05\x12\r\n\x05value\x18\x02 \x01(\x03:\x02\x38\x01\x1a\x30\n\x0e\x41skVolumeEntry\x12\x0b\n\x03key\x18\x01 \x01(\x05\x12\r\n\x05value\x18\x02 \x01(\x03:\x02\x38\x01\"\xf6\x05\n\x0fQuoteStockExtra\x12\x15\n\rtotal_bid_qty\x18\x01 \x01(\x03\x12\x15\n\rtotal_ask_qty\x18\x02 \x01(\x03\x12\x14\n\x0cma_bid_price\x18\x03 \x01(\x03\x12\x14\n\x0cma_ask_price\x18\x04 \x01(\x03\x12\x19\n\x11ma_bond_bid_price\x18\x05 \x01(\x03\x12\x19\n\x11ma_bond_ask_price\x18\x06 \x01(\x03\x12\x19\n\x11yield_to_maturity\x18\x07 \x01(\x03\x12\x0c\n\x04iopv\x18\x08 \x01(\x03\x12\x15\n\retf_buy_count\x18\t \x01(\x05\x12\x16\n\x0e\x65tf_sell_count\x18\n \x01(\x05\x12\x13\n\x0b\x65tf_buy_qty\x18\x0b \x01(\x03\x12\x15\n\retf_buy_money\x18\x0c \x01(\x03\x12\x14\n\x0c\x65tf_sell_qty\x18\r \x01(\x03\x12\x16\n\x0e\x65tf_sell_money\x18\x0e \x01(\x03\x12\x1e\n\x16total_warrant_exec_qty\x18\x0f \x01(\x03\x12\x1b\n\x13warrant_lower_price\x18\x10 \x01(\x03\x12\x1b\n\x13warrant_upper_price\x18\x11 \x01(\x03\x12\x18\n\x10\x63\x61ncel_buy_count\x18\x12 \x01(\x05\x12\x19\n\x11\x63\x61ncel_sell_count\x18\x13 \x01(\x05\x12\x16\n\x0e\x63\x61ncel_buy_qty\x18\x14 \x01(\x03\x12\x17\n\x0f\x63\x61ncel_sell_qty\x18\x15 \x01(\x03\x12\x18\n\x10\x63\x61ncel_buy_money\x18\x16 \x01(\x03\x12\x19\n\x11\x63\x61ncel_sell_money\x18\x17 \x01(\x03\x12\x17\n\x0ftotal_buy_count\x18\x18 \x01(\x03\x12\x18\n\x10total_sell_count\x18\x19 \x01(\x03\x12\x1a\n\x12\x64uration_after_buy\x18\x1a \x01(\x05\x12\x1b\n\x13\x64uration_after_sell\x18\x1b \x01(\x05\x12\x16\n\x0enum_bid_orders\x18\x1c \x01(\x05\x12\x16\n\x0enum_ask_orders\x18\x1d \x01(\x05\x12\x10\n\x08pre_iopv\x18\x1e \x01(\x01\"\xdc\x01\n\x16QuoteFutureOptionExtra\x12\x0e\n\x06settle\x18\x01 \x01(\x03\x12\x12\n\npre_settle\x18\x02 \x01(\x03\x12\x15\n\rtotal_positon\x18\x03 \x01(\x03\x12\x19\n\x11pre_total_positon\x18\x04 \x01(\x03\x12\x11\n\tpre_delta\x18\x05 \x01(\x03\x12\x12\n\ncurr_delta\x18\x06 \x01(\x03\x12\x15\n\rauction_price\x18\x07 \x01(\x05\x12\x13\n\x0b\x61uction_qty\x18\x08 \x01(\x05\x12\x19\n\x11last_enquiry_time\x18\t \x01(\t\"\x98\x01\n\x08QuoteMsg\x12/\n\tdata_type\x18\x01 \x01(\x0e\x32\x1c.Thoth.Quote.EMarketDataType\x12\x31\n\x0equote_base_msg\x18\x02 \x01(\x0b\x32\x19.Thoth.Quote.QuoteBaseMsg\x12(\n\nextra_data\x18\x03 \x01(\x0b\x32\x14.google.protobuf.Any*\xdd\x02\n\x0b\x45QuoteMsgID\x12\x17\n\x13KQuoteMsgID_Unknown\x10\x00\x12\x19\n\x15KQuoteMsgID_Subscribe\x10\x01\x12\x1b\n\x17KQuoteMsgID_UnSubscribe\x10\x02\x12\x1a\n\x16KQuoteMsgID_QuoteQuery\x10\x03\x12\x19\n\x15KQuoteMsgID_TimeStamp\x10\x04\x12\x1d\n\x19KQuoteMsgID_QuoteSnapshot\x10\x05\x12$\n KQuoteMsgID_QuerySecurityInfoReq\x10\x06\x12$\n KQuoteMsgID_QuerySecurityInfoRsp\x10\x07\x12\x1c\n\x18KQuoteMsgID_SubscribeAck\x10\x0b\x12\x1e\n\x1aKQuoteMsgID_UnSubscribeAck\x10\x0c\x12\x1d\n\x19KQuoteMsgID_QuoteQueryAck\x10\r*\x83\x01\n\x0f\x45MarketDataType\x12\x1b\n\x17KMarketDataType_Unknown\x10\x00\x12\x1a\n\x16KMarketDataType_Actual\x10\x01\x12\x1b\n\x17KMarketDataType_SOption\x10\x02\x12\x1a\n\x16KMarketDataType_Future\x10\x03*\xff\x01\n\rESecurityType\x12\x19\n\x15KSecurityType_Unknown\x10\x00\x12\x17\n\x13KSecurityType_Stock\x10\x01\x12\x18\n\x14KSecurityType_Option\x10\x02\x12\x16\n\x12KSecurityType_Fund\x10\x03\x12\x17\n\x13KSecurityType_Index\x10\x04\x12\x16\n\x12KSecurityType_Bond\x10\x05\x12\x18\n\x14KSecurityType_Future\x10\x06\x12\x1e\n\x1aKSecurityType_FutureOption\x10\x07\x12\x1d\n\x19KSecurityType_IndexFuture\x10\x08*`\n\rEQuoteRetCode\x12\x19\n\x15KQuoteRetCode_Unknown\x10\x00\x12\x18\n\x14KQuoteRetCode_Sucess\x10\x01\x12\x1a\n\x16KQuoteRetCode_HasError\x10\x02\x62\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'Thoth.Quote.Message_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _QUOTEBASEMSG_BIDPRICEENTRY._options = None
  _QUOTEBASEMSG_BIDPRICEENTRY._serialized_options = b'8\001'
  _QUOTEBASEMSG_ASKPRICEENTRY._options = None
  _QUOTEBASEMSG_ASKPRICEENTRY._serialized_options = b'8\001'
  _QUOTEBASEMSG_BIDVOLUMEENTRY._options = None
  _QUOTEBASEMSG_BIDVOLUMEENTRY._serialized_options = b'8\001'
  _QUOTEBASEMSG_ASKVOLUMEENTRY._options = None
  _QUOTEBASEMSG_ASKVOLUMEENTRY._serialized_options = b'8\001'
  _EQUOTEMSGID._serialized_start=2962
  _EQUOTEMSGID._serialized_end=3311
  _EMARKETDATATYPE._serialized_start=3314
  _EMARKETDATATYPE._serialized_end=3445
  _ESECURITYTYPE._serialized_start=3448
  _ESECURITYTYPE._serialized_end=3703
  _EQUOTERETCODE._serialized_start=3705
  _EQUOTERETCODE._serialized_end=3801
  _QUOTESYMBOLSMSG._serialized_start=69
  _QUOTESYMBOLSMSG._serialized_end=114
  _QUOTESUBSCRIBEUNACK._serialized_start=116
  _QUOTESUBSCRIBEUNACK._serialized_end=205
  _SECURITYINFORSP._serialized_start=207
  _SECURITYINFORSP._serialized_end=287
  _SECURITYSTATICINFO._serialized_start=290
  _SECURITYSTATICINFO._serialized_end=550
  _SECURITYEXTRADATA._serialized_start=553
  _SECURITYEXTRADATA._serialized_end=981
  _TIMESTAMP._serialized_start=983
  _TIMESTAMP._serialized_end=1009
  _QUOTEBASEMSG._serialized_start=1012
  _QUOTEBASEMSG._serialized_end=1820
  _QUOTEBASEMSG_BIDPRICEENTRY._serialized_start=1624
  _QUOTEBASEMSG_BIDPRICEENTRY._serialized_end=1671
  _QUOTEBASEMSG_ASKPRICEENTRY._serialized_start=1673
  _QUOTEBASEMSG_ASKPRICEENTRY._serialized_end=1720
  _QUOTEBASEMSG_BIDVOLUMEENTRY._serialized_start=1722
  _QUOTEBASEMSG_BIDVOLUMEENTRY._serialized_end=1770
  _QUOTEBASEMSG_ASKVOLUMEENTRY._serialized_start=1772
  _QUOTEBASEMSG_ASKVOLUMEENTRY._serialized_end=1820
  _QUOTESTOCKEXTRA._serialized_start=1823
  _QUOTESTOCKEXTRA._serialized_end=2581
  _QUOTEFUTUREOPTIONEXTRA._serialized_start=2584
  _QUOTEFUTUREOPTIONEXTRA._serialized_end=2804
  _QUOTEMSG._serialized_start=2807
  _QUOTEMSG._serialized_end=2959
# @@protoc_insertion_point(module_scope)
