[
  "external/model-preparation-algorithm/ote_cli/test_instance_segmentation.py::TestToolsMPAInstanceSegmentation::test_create_venv",
  "external/model-preparation-algorithm/ote_cli/test_instance_segmentation.py::TestToolsMPAInstanceSegmentation::test_nncf_eval[Custom_Counting_Instance_Segmentation_MaskRCNN_EfficientNetB2B]",
  "external/model-preparation-algorithm/ote_cli/test_instance_segmentation.py::TestToolsMPAInstanceSegmentation::test_nncf_eval[Custom_Counting_Instance_Segmentation_MaskRCNN_ResNet50]",
  "external/model-preparation-algorithm/ote_cli/test_instance_segmentation.py::TestToolsMPAInstanceSegmentation::test_nncf_eval_openvino[Custom_Counting_Instance_Segmentation_MaskRCNN_EfficientNetB2B]",
  "external/model-preparation-algorithm/ote_cli/test_instance_segmentation.py::TestToolsMPAInstanceSegmentation::test_nncf_eval_openvino[Custom_Counting_Instance_Segmentation_MaskRCNN_ResNet50]",
  "external/model-preparation-algorithm/ote_cli/test_instance_segmentation.py::TestToolsMPAInstanceSegmentation::test_nncf_export[Custom_Counting_Instance_Segmentation_MaskRCNN_EfficientNetB2B]",
  "external/model-preparation-algorithm/ote_cli/test_instance_segmentation.py::TestToolsMPAInstanceSegmentation::test_nncf_export[Custom_Counting_Instance_Segmentation_MaskRCNN_ResNet50]",
  "external/model-preparation-algorithm/ote_cli/test_instance_segmentation.py::TestToolsMPAInstanceSegmentation::test_nncf_optimize[Custom_Counting_Instance_Segmentation_MaskRCNN_EfficientNetB2B]",
  "external/model-preparation-algorithm/ote_cli/test_instance_segmentation.py::TestToolsMPAInstanceSegmentation::test_nncf_optimize[Custom_Counting_Instance_Segmentation_MaskRCNN_ResNet50]",
  "external/model-preparation-algorithm/ote_cli/test_instance_segmentation.py::TestToolsMPAInstanceSegmentation::test_ote_demo[Custom_Counting_Instance_Segmentation_MaskRCNN_EfficientNetB2B]",
  "external/model-preparation-algorithm/ote_cli/test_instance_segmentation.py::TestToolsMPAInstanceSegmentation::test_ote_demo[Custom_Counting_Instance_Segmentation_MaskRCNN_ResNet50]",
  "external/model-preparation-algorithm/ote_cli/test_instance_segmentation.py::TestToolsMPAInstanceSegmentation::test_ote_demo_deployment[Custom_Counting_Instance_Segmentation_MaskRCNN_EfficientNetB2B]",
  "external/model-preparation-algorithm/ote_cli/test_instance_segmentation.py::TestToolsMPAInstanceSegmentation::test_ote_demo_deployment[Custom_Counting_Instance_Segmentation_MaskRCNN_ResNet50]",
  "external/model-preparation-algorithm/ote_cli/test_instance_segmentation.py::TestToolsMPAInstanceSegmentation::test_ote_demo_openvino[Custom_Counting_Instance_Segmentation_MaskRCNN_EfficientNetB2B]",
  "external/model-preparation-algorithm/ote_cli/test_instance_segmentation.py::TestToolsMPAInstanceSegmentation::test_ote_demo_openvino[Custom_Counting_Instance_Segmentation_MaskRCNN_ResNet50]",
  "external/model-preparation-algorithm/ote_cli/test_instance_segmentation.py::TestToolsMPAInstanceSegmentation::test_ote_deploy_openvino[Custom_Counting_Instance_Segmentation_MaskRCNN_EfficientNetB2B]",
  "external/model-preparation-algorithm/ote_cli/test_instance_segmentation.py::TestToolsMPAInstanceSegmentation::test_ote_deploy_openvino[Custom_Counting_Instance_Segmentation_MaskRCNN_ResNet50]",
  "external/model-preparation-algorithm/ote_cli/test_instance_segmentation.py::TestToolsMPAInstanceSegmentation::test_ote_eval[Custom_Counting_Instance_Segmentation_MaskRCNN_EfficientNetB2B]",
  "external/model-preparation-algorithm/ote_cli/test_instance_segmentation.py::TestToolsMPAInstanceSegmentation::test_ote_eval[Custom_Counting_Instance_Segmentation_MaskRCNN_ResNet50]",
  "external/model-preparation-algorithm/ote_cli/test_instance_segmentation.py::TestToolsMPAInstanceSegmentation::test_ote_eval_deployment[Custom_Counting_Instance_Segmentation_MaskRCNN_EfficientNetB2B]",
  "external/model-preparation-algorithm/ote_cli/test_instance_segmentation.py::TestToolsMPAInstanceSegmentation::test_ote_eval_deployment[Custom_Counting_Instance_Segmentation_MaskRCNN_ResNet50]",
  "external/model-preparation-algorithm/ote_cli/test_instance_segmentation.py::TestToolsMPAInstanceSegmentation::test_ote_eval_openvino[Custom_Counting_Instance_Segmentation_MaskRCNN_EfficientNetB2B]",
  "external/model-preparation-algorithm/ote_cli/test_instance_segmentation.py::TestToolsMPAInstanceSegmentation::test_ote_eval_openvino[Custom_Counting_Instance_Segmentation_MaskRCNN_ResNet50]",
  "external/model-preparation-algorithm/ote_cli/test_instance_segmentation.py::TestToolsMPAInstanceSegmentation::test_ote_export[Custom_Counting_Instance_Segmentation_MaskRCNN_EfficientNetB2B]",
  "external/model-preparation-algorithm/ote_cli/test_instance_segmentation.py::TestToolsMPAInstanceSegmentation::test_ote_export[Custom_Counting_Instance_Segmentation_MaskRCNN_ResNet50]",
  "external/model-preparation-algorithm/ote_cli/test_instance_segmentation.py::TestToolsMPAInstanceSegmentation::test_ote_train[Custom_Counting_Instance_Segmentation_MaskRCNN_EfficientNetB2B]",
  "external/model-preparation-algorithm/ote_cli/test_instance_segmentation.py::TestToolsMPAInstanceSegmentation::test_ote_train[Custom_Counting_Instance_Segmentation_MaskRCNN_ResNet50]",
  "external/model-preparation-algorithm/ote_cli/test_instance_segmentation.py::TestToolsMPAInstanceSegmentation::test_pot_eval[Custom_Counting_Instance_Segmentation_MaskRCNN_EfficientNetB2B]",
  "external/model-preparation-algorithm/ote_cli/test_instance_segmentation.py::TestToolsMPAInstanceSegmentation::test_pot_eval[Custom_Counting_Instance_Segmentation_MaskRCNN_ResNet50]",
  "external/model-preparation-algorithm/ote_cli/test_instance_segmentation.py::TestToolsMPAInstanceSegmentation::test_pot_optimize[Custom_Counting_Instance_Segmentation_MaskRCNN_EfficientNetB2B]",
  "external/model-preparation-algorithm/ote_cli/test_instance_segmentation.py::TestToolsMPAInstanceSegmentation::test_pot_optimize[Custom_Counting_Instance_Segmentation_MaskRCNN_ResNet50]",
  "misc/test_code_checks.py::TestCodeChecks::test_code_checks",
  "misc/test_docs.py::TestDocs::test_algorithms_table",
  "misc/test_docs.py::TestDocs::test_help_stdoutputs_of_tools",
  "misc/test_template_files.py::TestAnomalyTemplates::test_template[Custom_Counting_Instance_Segmentation_MaskRCNN_EfficientNetB2B]",
  "misc/test_template_files.py::TestAnomalyTemplates::test_template[Custom_Counting_Instance_Segmentation_MaskRCNN_ResNet50]",
  "misc/test_template_files.py::TestAnomalyTemplates::test_template[Custom_Image_Classification_EfficientNet-V2-S]",
  "misc/test_template_files.py::TestAnomalyTemplates::test_template[Custom_Image_Classification_EfficinetNet-B0]",
  "misc/test_template_files.py::TestAnomalyTemplates::test_template[Custom_Image_Classification_MobileNet-V3-large-1x]",
  "misc/test_template_files.py::TestAnomalyTemplates::test_template[Custom_Object_Detection_Gen3_ATSS]",
  "misc/test_template_files.py::TestAnomalyTemplates::test_template[Custom_Object_Detection_Gen3_SSD]",
  "misc/test_template_files.py::TestAnomalyTemplates::test_template[Custom_Object_Detection_YOLOX]",
  "misc/test_template_files.py::TestAnomalyTemplates::test_template[Custom_Rotated_Detection_via_Instance_Segmentation_MaskRCNN_EfficientNetB2B]",
  "misc/test_template_files.py::TestAnomalyTemplates::test_template[Custom_Rotated_Detection_via_Instance_Segmentation_MaskRCNN_ResNet50]",
  "misc/test_template_files.py::TestAnomalyTemplates::test_template[Custom_Semantic_Segmentation_Lite-HRNet-18-mod2_OCR]",
  "misc/test_template_files.py::TestAnomalyTemplates::test_template[Custom_Semantic_Segmentation_Lite-HRNet-18_OCR]",
  "misc/test_template_files.py::TestAnomalyTemplates::test_template[Custom_Semantic_Segmentation_Lite-HRNet-s-mod2_OCR]",
  "misc/test_template_files.py::TestAnomalyTemplates::test_template[Custom_Semantic_Segmentation_Lite-HRNet-x-mod3_OCR]",
  "misc/test_template_files.py::TestMPATemplates::test_template[Custom_Counting_Instance_Segmentation_MaskRCNN_EfficientNetB2B]",
  "misc/test_template_files.py::TestMPATemplates::test_template[Custom_Counting_Instance_Segmentation_MaskRCNN_ResNet50]",
  "misc/test_template_files.py::TestMPATemplates::test_template[Custom_Image_Classification_EfficientNet-V2-S]",
  "misc/test_template_files.py::TestMPATemplates::test_template[Custom_Image_Classification_EfficinetNet-B0]",
  "misc/test_template_files.py::TestMPATemplates::test_template[Custom_Image_Classification_MobileNet-V3-large-1x]",
  "misc/test_template_files.py::TestMPATemplates::test_template[Custom_Object_Detection_Gen3_ATSS]",
  "misc/test_template_files.py::TestMPATemplates::test_template[Custom_Object_Detection_Gen3_SSD]",
  "misc/test_template_files.py::TestMPATemplates::test_template[Custom_Object_Detection_YOLOX]",
  "misc/test_template_files.py::TestMPATemplates::test_template[Custom_Rotated_Detection_via_Instance_Segmentation_MaskRCNN_EfficientNetB2B]",
  "misc/test_template_files.py::TestMPATemplates::test_template[Custom_Rotated_Detection_via_Instance_Segmentation_MaskRCNN_ResNet50]",
  "misc/test_template_files.py::TestMPATemplates::test_template[Custom_Semantic_Segmentation_Lite-HRNet-18-mod2_OCR]",
  "misc/test_template_files.py::TestMPATemplates::test_template[Custom_Semantic_Segmentation_Lite-HRNet-18_OCR]",
  "misc/test_template_files.py::TestMPATemplates::test_template[Custom_Semantic_Segmentation_Lite-HRNet-s-mod2_OCR]",
  "misc/test_template_files.py::TestMPATemplates::test_template[Custom_Semantic_Segmentation_Lite-HRNet-x-mod3_OCR]"
]