from mecha import Mecha
import logging
from bolt.contrib.defer import Defer

defer = ctx.inject(Defer)
mc = ctx.inject(Mecha)
logger = logging.getLogger("wicked_expressions")



class Rebindable:
    """ allows scoreboard expressions __rebind__ to function correctly inside of classes """
    def __setattr__(self, name, value):
        attr = getattr(self, name, None)

        if attr is None or not getattr(attr, "__rebind__", None):
            return super().__setattr__(name, value)

        new_attr = attr.__rebind__(value)
        super().__setattr__(name, new_attr)

def parse_holder(holder: str):
    return mc.parse(holder, using="score_holder", provide={"properties":{"amount":"single"}})



