[project]
name = "django-sqlfun"
version = "0.0.5"
description = "Django app that lets you define custom SQL functions"
authors = [
    { name = "Radu Suciu" },
]
dependencies = [
    "django>=3.2,<5.0",
    "sqlparse>=0.4.3",
]
requires-python = ">=3.9"
readme = "README.md"
keywords = [
    "django",
    "database",
    "sql-functions",
    "custom-sql",
]
classifiers = [
    "Framework :: Django",
    "Framework :: Django :: 3.2",
    "Framework :: Django :: 4.0",
    "Framework :: Django :: 4.1",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.license]
text = "MIT"

[build-system]
requires = [
    "pdm-pep517>=1.0",
]
build-backend = "pdm.pep517.api"

[tool.pdm.dev-dependencies]
dev = [
    "pytest>=7.2.2",
    "django>=3.2,<5.0",
    "pytest-django>=4.5.2",
    "psycopg2>=2.9.5",
    "pytest-docker-compose>=3.2.1",
    "ruff>=0.0.259",
    "black>=23.1.0",
    "types-mock>=5.0.0.5",
    "bumpver>=2022.1120",
]

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.mccabe]
max-complexity = 10

[tool.git-cliff.changelog]
header = "# Changelog\n\nAll notable changes to this project will be documented in this file.\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n"
body = "{% if version %}## [{{ version | trim_start_matches(pat=\"v\") }}] - {{ timestamp | date(format=\"%Y-%m-%d\") }}\n{% else %}## [Unreleased]\n{% endif %}{% for group, commits in commits | group_by(attribute=\"group\") %}\n    ### {{ group | upper_first }}\n    {% for commit in commits %}\n        - {{ commit.message | upper_first }}{% endfor %}\n{% endfor %}\n\n"
trim = true
footer = "<!-- generated by git-cliff -->\n"

[tool.git-cliff.git]
conventional_commits = true
filter_unconventional = true
split_commits = false
commit_parsers = [
    { message = "^.*: add", group = "Added" },
    { message = "^.*: support", group = "Added" },
    { message = "^.*: remove", group = "Removed" },
    { message = "^.*: delete", group = "Removed" },
    { message = "^test", group = "Fixed" },
    { message = "^fix", group = "Fixed" },
    { message = "^.*: fix", group = "Fixed" },
    { message = "^.*", group = "Changed" },
]
protect_breaking_commits = false
filter_commits = true
tag_pattern = "v[0-9]*"
skip_tags = "v0.1.0-beta.1"
ignore_tags = ""
topo_order = false
sort_commits = "oldest"

[tool.bumpver]
current_version = "0.0.5"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message = "bump version {old_version} -> {new_version}"
commit = true
tag = true
push = false

[tool.bumpver.file_patterns]
"pyproject.toml" = [
    "current_version = \"{version}\"",
    "version = \"{version}\"",
]
