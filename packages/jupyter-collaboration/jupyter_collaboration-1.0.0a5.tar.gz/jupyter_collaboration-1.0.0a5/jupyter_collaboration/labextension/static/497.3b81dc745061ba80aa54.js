"use strict";(self.webpackChunk_jupyter_collaboration_extension=self.webpackChunk_jupyter_collaboration_extension||[]).push([[497],{9497:(e,r,o)=>{o.r(r),o.d(r,{default:()=>I});var t,n=o(7985),a=o(9903),s=o(4409),i=o(7853),l=o(3790);!function(e){e.openPath="filebrowser:open-path"}(t||(t={}));const c={id:"@jupyter/collaboration-extension:defaultFileBrowser",provides:a.IDefaultFileBrowser,requires:[a.IFileBrowserFactory,s.ITranslator],optional:[n.IRouter,n.JupyterFrontEnd.ITreeResolver,n.ILabShell,i.ISettingRegistry],activate:async(e,r,o,t,n,a,s)=>{const{commands:i}=e,c=o.load("jupyter_collaboration"),u=new l.YDrive(e.serviceManager.user,c);e.serviceManager.contents.addDrive(u);const p=r.createFileBrowser("filebrowser",{auto:!1,restore:!1,driveName:"YDrive"});return d.restoreBrowser(p,i,t,n,a),s&&s.load("@jupyterlab/notebook-extension:tracker").then((e=>{const r=e=>{var r;const o=null==e?void 0:e.get("experimentalEnableDocumentWideUndoRedo").composite;u.sharedModelFactory.setDocumentOptions("notebook",{disableDocumentWideUndoRedo:null===(r=!o)||void 0===r||r})};r(e),e.changed.connect((e=>r(e)))})),p}};var d;!function(e){e.restoreBrowser=async function(e,r,o,n,a){const s="jp-mod-restoring";if(e.addClass(s),!o)return await e.model.restore(e.id),await e.model.refresh(),void e.removeClass(s);const i=async()=>{o.routed.disconnect(i);const l=await(null==n?void 0:n.paths);(null==l?void 0:l.file)||(null==l?void 0:l.browser)?(await e.model.restore(e.id,!1),l.file&&await r.execute(t.openPath,{path:l.file,dontShowBrowser:!0}),l.browser&&await r.execute(t.openPath,{path:l.browser,dontShowBrowser:!0})):(await e.model.restore(e.id),await e.model.refresh()),e.removeClass(s),(null==a?void 0:a.isEmpty("main"))&&r.execute("launcher:create")};o.routed.connect(i)}}(d||(d={}));var u=o(832),p=o(4715),w=o(8895),m=o(1203),v=o(1144),b=o(4506),y=o(9786),h=o(8349),f=o(981),g=o(6493),x=o(7099);const I=[c,{id:"@jupyter/collaboration-extension:userMenu",description:"Provide connected user menu.",requires:[],provides:w.IUserMenu,activate:e=>{const{commands:r}=e,{user:o}=e.serviceManager;return new w.UserMenu({commands:r,user:o})}},{id:"@jupyter/collaboration-extension:userMenuBar",description:"Add user menu to the interface.",autoStart:!0,requires:[w.IUserMenu],activate:async(e,r)=>{const{shell:o}=e,{user:t}=e.serviceManager,n=new v.MenuBar({forceItemsPosition:{forceX:!1,forceY:!1},renderer:new w.RendererUserMenu(t)});n.id="jp-UserMenu",t.userChanged.connect((()=>n.update())),n.addMenu(r),o.add(n,"top",{rank:1e3})}},{id:"@jupyter/collaboration-extension:rtcGlobalAwareness",description:"Add global awareness to share working document of users.",requires:[h.IStateDB],provides:w.IGlobalAwareness,activate:(e,r)=>{const{user:o}=e.serviceManager,t=new f.Doc,n=new g.GL(t),a=y.ServerConnection.makeSettings(),s=b.URLExt.join(a.wsUrl,"api/collaboration/room");new x.WebsocketProvider(s,"JupyterLab:globalAwareness",t,{awareness:n});const i=()=>{n.setLocalStateField("user",o.identity)};return o.isReady&&i(),o.ready.then(i).catch((e=>console.error(e))),o.userChanged.connect(i),r.changed.connect((async()=>{var e,o;const t=(null===(o=null===(e=(await r.toJSON())["layout-restorer:data"])||void 0===e?void 0:e.main)||void 0===o?void 0:o.current)||"";t.startsWith("editor")||t.startsWith("notebook")?n.setLocalStateField("current",t):n.setLocalStateField("current",null)})),n}},{id:"@jupyter/collaboration-extension:rtcPanel",description:"Add side panel to display all currently connected users.",autoStart:!0,requires:[w.IGlobalAwareness],optional:[s.ITranslator],activate:(e,r,o)=>{const{user:t}=e.serviceManager,n=(null!=o?o:s.nullTranslator).load("jupyter_collaboration"),a=new m.SidePanel;a.id=u.DOMUtils.createDomID(),a.title.icon=m.usersIcon,a.title.caption=n.__("Collaboration"),a.addClass("jp-RTCPanel"),e.shell.add(a,"left",{rank:300});const i=new w.UserInfoPanel(t);i.title.label=n.__("User info"),i.title.caption=n.__("User information"),a.addWidget(i);const l=new w.CollaboratorsPanel(t,r,(r=>{e.commands.execute("docmanager:open",{path:r})}));l.title.label=n.__("Online Collaborators"),a.addWidget(l)}},{id:"@jupyter/collaboration-extension:userEditorCursors",description:"Add CodeMirror extension to display remote user cursors and selections.",autoStart:!0,requires:[p.IEditorExtensionRegistry],activate:(e,r)=>{r.addExtension({name:"remote-user-cursors",factory(e){const{awareness:r,ysource:o}=e.model.sharedModel;return p.EditorExtensionRegistry.createImmutableExtension((0,w.remoteUserCursors)({awareness:r,ytext:o}))}})}}]}}]);