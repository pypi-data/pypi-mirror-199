Metadata-Version: 2.1
Name: forge-format
Version: 1.1.0
Summary: Formatting library for Forge
Home-page: https://www.forgepackages.com/
License: MIT
Keywords: django,saas,forge,framework
Author: Dave Gaeddert
Author-email: dave.gaeddert@dropseed.dev
Requires-Python: >=3.8,<4.0
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Framework :: Django :: 4
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Dist: black (>=22.0.0)
Requires-Dist: click (>=8.0.0)
Requires-Dist: forge-core (>=1.0.0,<2.0.0)
Requires-Dist: ruff (>=0.0.259,<0.0.260)
Project-URL: Documentation, https://www.forgepackages.com/docs/
Project-URL: Repository, https://github.com/forgepackages/forge-format
Description-Content-Type: text/markdown

# forge-format

A unified, opinionated code formatting command for Django projects.

Uses [black](https://github.com/psf/black) and [ruff](https://github.com/charliermarsh/ruff/) to format Python code.


## Installation

First, install `forge-format` from [PyPI](https://pypi.org/project/forge-format/):

```sh
pip install forge-format
```

Now you will have access to the `format` command:

```sh
forge format
```

Note that if you're using black + ruff for the first time,
a common issue is to get a bunch of `E501 Line too long` errors on code comments.
This is because black doesn't fix line lengths on comments!
If there are more than you want to fix, just add this to your `pyproject.toml`:

```toml
[tool.ruff]
# Never enforce `E501` (line length violations).
ignore = ["E501"]
```

