from com.palantir.ptoss.cinch.core import DefaultBindableModel
from dev.thecesrom.helper.types import AnyStr
from java.util import Date

class AbstractScheduleModel(DefaultBindableModel):
    def getScheduleForDay(self, cal) -> None: ...
    def getType(self) -> None: ...
    def isObserveHolidays(self) -> None: ...
    def setObserveHolidays(self, observeHolidays) -> None: ...

class BasicScheduleModel(AbstractScheduleModel):
    def getAllDayTime(self) -> None: ...
    def getFridayTime(self) -> None: ...
    def getMondayTime(self) -> None: ...
    def getRepeat(self) -> None: ...
    def getRepeatOff(self) -> None: ...
    def getRepeatOn(self) -> None: ...
    def getSaturdayTime(self) -> None: ...
    def getStartingAt(self) -> None: ...
    def getSundayTime(self) -> None: ...
    def getThursdayTime(self) -> None: ...
    def getTuesdayTime(self) -> None: ...
    def getWednesdayTime(self) -> None: ...
    def getWeekDayTime(self) -> None: ...
    def isAllDays(self) -> None: ...
    def isFriday(self) -> None: ...
    def isMonday(self) -> None: ...
    def isRepeating(self) -> None: ...
    def isSaturday(self) -> None: ...
    def isSunday(self) -> None: ...
    def isThursday(self) -> None: ...
    def isTuesday(self) -> None: ...
    def isUseDays(self) -> None: ...
    def isWednesday(self) -> None: ...
    def isWeekDays(self) -> None: ...
    def set(self, that) -> None: ...
    def setAllDays(self, allDays) -> None: ...
    def setAllDayTime(self, allDayTime) -> None: ...
    def setFriday(self, friday) -> None: ...
    def setFridayTime(self, fridayTime) -> None: ...
    def setMonday(self, monday) -> None: ...
    def setMondayTime(self, mondayTime) -> None: ...
    def setRepeat(self, repeat) -> None: ...
    def setRepeatOff(self, repeatOff) -> None: ...
    def setRepeatOn(self, repeatOn) -> None: ...
    def setSaturday(self, saturday) -> None: ...
    def setSaturdayTime(self, saturdayTime) -> None: ...
    def setStartingAt(self, startingAt) -> None: ...
    def setSunday(self, sunday) -> None: ...
    def setSundayTime(self, sundayTime) -> None: ...
    def setThursday(self, thursday) -> None: ...
    def setThursdayTime(self, thursdayTime) -> None: ...
    def setTuesday(self, tuesday) -> None: ...
    def setTuesdayTime(self, tuesdayTime) -> None: ...
    def setWednesday(self, wednesday) -> None: ...
    def setWednesdayTime(self, wednesdayTime) -> None: ...
    def setWeekDays(self, weekDays) -> None: ...
    def setWeekDayTime(self, weekDayTime) -> None: ...

class CompositeScheduleModel(AbstractScheduleModel):
    def getModels(self) -> None: ...

class HolidayModel(DefaultBindableModel):
    date: Date
    name: AnyStr
    repeatAnnually: bool
    def __init__(self, name: AnyStr, date: Date, repeatAnnually: bool) -> None: ...
    def getDate(self) -> Date: ...
    def getName(self) -> AnyStr: ...
    def isRepeatAnnually(self) -> bool: ...
    def set(self, that: HolidayModel) -> None: ...
    def setDate(self, date: Date) -> None: ...
    def setName(self, name: AnyStr) -> None: ...
    def setRepeatAnnually(self, repeatAnnually: bool) -> None: ...

class ScheduleAdjustment(DefaultBindableModel):
    start: Date
    end: Date
    available: bool
    note: AnyStr
    def __init__(
        self, start: Date, end: Date, available: bool, note: AnyStr
    ) -> None: ...
    def contains(self, timestamp: long) -> bool: ...
    def getEnd(self) -> Date: ...
    def getNote(self) -> AnyStr: ...
    def getStart(self) -> Date: ...
    def isAvailable(self) -> bool: ...
    def setAvailable(self, available: bool) -> None: ...
    def setEnd(self, end: Date) -> None: ...
    def setNote(self, note: AnyStr) -> None: ...
    def setStart(self, start: Date) -> None: ...
