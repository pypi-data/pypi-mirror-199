# coding: utf-8

"""
    WellViewSDKAPI

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0.9
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class DrillingParameterProgramData(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'bhaanpresmax': 'float',
        'bhaanpresmin': 'float',
        'bhtempmax': 'float',
        'bhtempmin': 'float',
        'com': 'str',
        'depthbtm': 'float',
        'depthtop': 'float',
        'drillconsid': 'str',
        'ecdmax': 'float',
        'ecdmin': 'float',
        'gasinjratemax': 'float',
        'gasinjratemin': 'float',
        'gasreturnratemax': 'float',
        'gasreturnratemin': 'float',
        'hookloadoffbottommax': 'float',
        'hookloadoffbottommin': 'float',
        'hookloadpickupmax': 'float',
        'hookloadpickupmin': 'float',
        'hookloadrotatingmax': 'float',
        'hookloadrotatingmin': 'float',
        'hookloadslackoffmax': 'float',
        'hookloadslackoffmin': 'float',
        'idrec': 'str',
        'idrecitem': 'str',
        'idrecparent': 'str',
        'idrecwellbore': 'str',
        'idwell': 'str',
        'injtempmax': 'float',
        'injtempmin': 'float',
        'liquidinjratemax': 'float',
        'liquidinjratemin': 'float',
        'liquidinjraterisermax': 'float',
        'liquidinjraterisermin': 'float',
        'liquidreturnratemax': 'float',
        'liquidreturnratemin': 'float',
        'ropinstmax': 'float',
        'ropinstmin': 'float',
        'rpmmotormax': 'float',
        'rpmmotormin': 'float',
        'rpmstringmax': 'float',
        'rpmstringmin': 'float',
        'sppdiffmax': 'float',
        'sppdiffmin': 'float',
        'sppdrillmax': 'float',
        'sppdrillmin': 'float',
        'surfannpresmax': 'float',
        'surfannpresmin': 'float',
        'surfanntempmax': 'float',
        'surfanntempmin': 'float',
        'szodvgstabmax': 'float',
        'szodvgstabmin': 'float',
        'tfomax': 'float',
        'tfomin': 'float',
        'tforef': 'str',
        'torquedrillmax': 'float',
        'torquedrillmin': 'float',
        'torqueoffbtmmax': 'float',
        'torqueoffbtmmin': 'float',
        'torqueunits': 'str',
        'typ1': 'str',
        'typ2': 'str',
        'wobmax': 'float',
        'wobmin': 'float',
        'systag': 'str'
    }

    attribute_map = {
        'bhaanpresmax': 'bhaanpresmax',
        'bhaanpresmin': 'bhaanpresmin',
        'bhtempmax': 'bhtempmax',
        'bhtempmin': 'bhtempmin',
        'com': 'com',
        'depthbtm': 'depthbtm',
        'depthtop': 'depthtop',
        'drillconsid': 'drillconsid',
        'ecdmax': 'ecdmax',
        'ecdmin': 'ecdmin',
        'gasinjratemax': 'gasinjratemax',
        'gasinjratemin': 'gasinjratemin',
        'gasreturnratemax': 'gasreturnratemax',
        'gasreturnratemin': 'gasreturnratemin',
        'hookloadoffbottommax': 'hookloadoffbottommax',
        'hookloadoffbottommin': 'hookloadoffbottommin',
        'hookloadpickupmax': 'hookloadpickupmax',
        'hookloadpickupmin': 'hookloadpickupmin',
        'hookloadrotatingmax': 'hookloadrotatingmax',
        'hookloadrotatingmin': 'hookloadrotatingmin',
        'hookloadslackoffmax': 'hookloadslackoffmax',
        'hookloadslackoffmin': 'hookloadslackoffmin',
        'idrec': 'idrec',
        'idrecitem': 'idrecitem',
        'idrecparent': 'idrecparent',
        'idrecwellbore': 'idrecwellbore',
        'idwell': 'idwell',
        'injtempmax': 'injtempmax',
        'injtempmin': 'injtempmin',
        'liquidinjratemax': 'liquidinjratemax',
        'liquidinjratemin': 'liquidinjratemin',
        'liquidinjraterisermax': 'liquidinjraterisermax',
        'liquidinjraterisermin': 'liquidinjraterisermin',
        'liquidreturnratemax': 'liquidreturnratemax',
        'liquidreturnratemin': 'liquidreturnratemin',
        'ropinstmax': 'ropinstmax',
        'ropinstmin': 'ropinstmin',
        'rpmmotormax': 'rpmmotormax',
        'rpmmotormin': 'rpmmotormin',
        'rpmstringmax': 'rpmstringmax',
        'rpmstringmin': 'rpmstringmin',
        'sppdiffmax': 'sppdiffmax',
        'sppdiffmin': 'sppdiffmin',
        'sppdrillmax': 'sppdrillmax',
        'sppdrillmin': 'sppdrillmin',
        'surfannpresmax': 'surfannpresmax',
        'surfannpresmin': 'surfannpresmin',
        'surfanntempmax': 'surfanntempmax',
        'surfanntempmin': 'surfanntempmin',
        'szodvgstabmax': 'szodvgstabmax',
        'szodvgstabmin': 'szodvgstabmin',
        'tfomax': 'tfomax',
        'tfomin': 'tfomin',
        'tforef': 'tforef',
        'torquedrillmax': 'torquedrillmax',
        'torquedrillmin': 'torquedrillmin',
        'torqueoffbtmmax': 'torqueoffbtmmax',
        'torqueoffbtmmin': 'torqueoffbtmmin',
        'torqueunits': 'torqueunits',
        'typ1': 'typ1',
        'typ2': 'typ2',
        'wobmax': 'wobmax',
        'wobmin': 'wobmin',
        'systag': 'systag'
    }

    def __init__(self, bhaanpresmax=None, bhaanpresmin=None, bhtempmax=None, bhtempmin=None, com=None, depthbtm=None, depthtop=None, drillconsid=None, ecdmax=None, ecdmin=None, gasinjratemax=None, gasinjratemin=None, gasreturnratemax=None, gasreturnratemin=None, hookloadoffbottommax=None, hookloadoffbottommin=None, hookloadpickupmax=None, hookloadpickupmin=None, hookloadrotatingmax=None, hookloadrotatingmin=None, hookloadslackoffmax=None, hookloadslackoffmin=None, idrec=None, idrecitem=None, idrecparent=None, idrecwellbore=None, idwell=None, injtempmax=None, injtempmin=None, liquidinjratemax=None, liquidinjratemin=None, liquidinjraterisermax=None, liquidinjraterisermin=None, liquidreturnratemax=None, liquidreturnratemin=None, ropinstmax=None, ropinstmin=None, rpmmotormax=None, rpmmotormin=None, rpmstringmax=None, rpmstringmin=None, sppdiffmax=None, sppdiffmin=None, sppdrillmax=None, sppdrillmin=None, surfannpresmax=None, surfannpresmin=None, surfanntempmax=None, surfanntempmin=None, szodvgstabmax=None, szodvgstabmin=None, tfomax=None, tfomin=None, tforef=None, torquedrillmax=None, torquedrillmin=None, torqueoffbtmmax=None, torqueoffbtmmin=None, torqueunits=None, typ1=None, typ2=None, wobmax=None, wobmin=None, systag=None):  # noqa: E501
        """DrillingParameterProgramData - a model defined in Swagger"""  # noqa: E501
        self._bhaanpresmax = None
        self._bhaanpresmin = None
        self._bhtempmax = None
        self._bhtempmin = None
        self._com = None
        self._depthbtm = None
        self._depthtop = None
        self._drillconsid = None
        self._ecdmax = None
        self._ecdmin = None
        self._gasinjratemax = None
        self._gasinjratemin = None
        self._gasreturnratemax = None
        self._gasreturnratemin = None
        self._hookloadoffbottommax = None
        self._hookloadoffbottommin = None
        self._hookloadpickupmax = None
        self._hookloadpickupmin = None
        self._hookloadrotatingmax = None
        self._hookloadrotatingmin = None
        self._hookloadslackoffmax = None
        self._hookloadslackoffmin = None
        self._idrec = None
        self._idrecitem = None
        self._idrecparent = None
        self._idrecwellbore = None
        self._idwell = None
        self._injtempmax = None
        self._injtempmin = None
        self._liquidinjratemax = None
        self._liquidinjratemin = None
        self._liquidinjraterisermax = None
        self._liquidinjraterisermin = None
        self._liquidreturnratemax = None
        self._liquidreturnratemin = None
        self._ropinstmax = None
        self._ropinstmin = None
        self._rpmmotormax = None
        self._rpmmotormin = None
        self._rpmstringmax = None
        self._rpmstringmin = None
        self._sppdiffmax = None
        self._sppdiffmin = None
        self._sppdrillmax = None
        self._sppdrillmin = None
        self._surfannpresmax = None
        self._surfannpresmin = None
        self._surfanntempmax = None
        self._surfanntempmin = None
        self._szodvgstabmax = None
        self._szodvgstabmin = None
        self._tfomax = None
        self._tfomin = None
        self._tforef = None
        self._torquedrillmax = None
        self._torquedrillmin = None
        self._torqueoffbtmmax = None
        self._torqueoffbtmmin = None
        self._torqueunits = None
        self._typ1 = None
        self._typ2 = None
        self._wobmax = None
        self._wobmin = None
        self._systag = None
        self.discriminator = None
        if bhaanpresmax is not None:
            self.bhaanpresmax = bhaanpresmax
        if bhaanpresmin is not None:
            self.bhaanpresmin = bhaanpresmin
        if bhtempmax is not None:
            self.bhtempmax = bhtempmax
        if bhtempmin is not None:
            self.bhtempmin = bhtempmin
        if com is not None:
            self.com = com
        if depthbtm is not None:
            self.depthbtm = depthbtm
        if depthtop is not None:
            self.depthtop = depthtop
        if drillconsid is not None:
            self.drillconsid = drillconsid
        if ecdmax is not None:
            self.ecdmax = ecdmax
        if ecdmin is not None:
            self.ecdmin = ecdmin
        if gasinjratemax is not None:
            self.gasinjratemax = gasinjratemax
        if gasinjratemin is not None:
            self.gasinjratemin = gasinjratemin
        if gasreturnratemax is not None:
            self.gasreturnratemax = gasreturnratemax
        if gasreturnratemin is not None:
            self.gasreturnratemin = gasreturnratemin
        if hookloadoffbottommax is not None:
            self.hookloadoffbottommax = hookloadoffbottommax
        if hookloadoffbottommin is not None:
            self.hookloadoffbottommin = hookloadoffbottommin
        if hookloadpickupmax is not None:
            self.hookloadpickupmax = hookloadpickupmax
        if hookloadpickupmin is not None:
            self.hookloadpickupmin = hookloadpickupmin
        if hookloadrotatingmax is not None:
            self.hookloadrotatingmax = hookloadrotatingmax
        if hookloadrotatingmin is not None:
            self.hookloadrotatingmin = hookloadrotatingmin
        if hookloadslackoffmax is not None:
            self.hookloadslackoffmax = hookloadslackoffmax
        if hookloadslackoffmin is not None:
            self.hookloadslackoffmin = hookloadslackoffmin
        if idrec is not None:
            self.idrec = idrec
        if idrecitem is not None:
            self.idrecitem = idrecitem
        self.idrecparent = idrecparent
        if idrecwellbore is not None:
            self.idrecwellbore = idrecwellbore
        self.idwell = idwell
        if injtempmax is not None:
            self.injtempmax = injtempmax
        if injtempmin is not None:
            self.injtempmin = injtempmin
        if liquidinjratemax is not None:
            self.liquidinjratemax = liquidinjratemax
        if liquidinjratemin is not None:
            self.liquidinjratemin = liquidinjratemin
        if liquidinjraterisermax is not None:
            self.liquidinjraterisermax = liquidinjraterisermax
        if liquidinjraterisermin is not None:
            self.liquidinjraterisermin = liquidinjraterisermin
        if liquidreturnratemax is not None:
            self.liquidreturnratemax = liquidreturnratemax
        if liquidreturnratemin is not None:
            self.liquidreturnratemin = liquidreturnratemin
        if ropinstmax is not None:
            self.ropinstmax = ropinstmax
        if ropinstmin is not None:
            self.ropinstmin = ropinstmin
        if rpmmotormax is not None:
            self.rpmmotormax = rpmmotormax
        if rpmmotormin is not None:
            self.rpmmotormin = rpmmotormin
        if rpmstringmax is not None:
            self.rpmstringmax = rpmstringmax
        if rpmstringmin is not None:
            self.rpmstringmin = rpmstringmin
        if sppdiffmax is not None:
            self.sppdiffmax = sppdiffmax
        if sppdiffmin is not None:
            self.sppdiffmin = sppdiffmin
        if sppdrillmax is not None:
            self.sppdrillmax = sppdrillmax
        if sppdrillmin is not None:
            self.sppdrillmin = sppdrillmin
        if surfannpresmax is not None:
            self.surfannpresmax = surfannpresmax
        if surfannpresmin is not None:
            self.surfannpresmin = surfannpresmin
        if surfanntempmax is not None:
            self.surfanntempmax = surfanntempmax
        if surfanntempmin is not None:
            self.surfanntempmin = surfanntempmin
        if szodvgstabmax is not None:
            self.szodvgstabmax = szodvgstabmax
        if szodvgstabmin is not None:
            self.szodvgstabmin = szodvgstabmin
        if tfomax is not None:
            self.tfomax = tfomax
        if tfomin is not None:
            self.tfomin = tfomin
        if tforef is not None:
            self.tforef = tforef
        if torquedrillmax is not None:
            self.torquedrillmax = torquedrillmax
        if torquedrillmin is not None:
            self.torquedrillmin = torquedrillmin
        if torqueoffbtmmax is not None:
            self.torqueoffbtmmax = torqueoffbtmmax
        if torqueoffbtmmin is not None:
            self.torqueoffbtmmin = torqueoffbtmmin
        if torqueunits is not None:
            self.torqueunits = torqueunits
        if typ1 is not None:
            self.typ1 = typ1
        if typ2 is not None:
            self.typ2 = typ2
        if wobmax is not None:
            self.wobmax = wobmax
        if wobmin is not None:
            self.wobmin = wobmin
        if systag is not None:
            self.systag = systag

    @property
    def bhaanpresmax(self):
        """Gets the bhaanpresmax of this DrillingParameterProgramData.  # noqa: E501


        :return: The bhaanpresmax of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._bhaanpresmax

    @bhaanpresmax.setter
    def bhaanpresmax(self, bhaanpresmax):
        """Sets the bhaanpresmax of this DrillingParameterProgramData.


        :param bhaanpresmax: The bhaanpresmax of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._bhaanpresmax = bhaanpresmax

    @property
    def bhaanpresmin(self):
        """Gets the bhaanpresmin of this DrillingParameterProgramData.  # noqa: E501


        :return: The bhaanpresmin of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._bhaanpresmin

    @bhaanpresmin.setter
    def bhaanpresmin(self, bhaanpresmin):
        """Sets the bhaanpresmin of this DrillingParameterProgramData.


        :param bhaanpresmin: The bhaanpresmin of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._bhaanpresmin = bhaanpresmin

    @property
    def bhtempmax(self):
        """Gets the bhtempmax of this DrillingParameterProgramData.  # noqa: E501


        :return: The bhtempmax of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._bhtempmax

    @bhtempmax.setter
    def bhtempmax(self, bhtempmax):
        """Sets the bhtempmax of this DrillingParameterProgramData.


        :param bhtempmax: The bhtempmax of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._bhtempmax = bhtempmax

    @property
    def bhtempmin(self):
        """Gets the bhtempmin of this DrillingParameterProgramData.  # noqa: E501


        :return: The bhtempmin of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._bhtempmin

    @bhtempmin.setter
    def bhtempmin(self, bhtempmin):
        """Sets the bhtempmin of this DrillingParameterProgramData.


        :param bhtempmin: The bhtempmin of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._bhtempmin = bhtempmin

    @property
    def com(self):
        """Gets the com of this DrillingParameterProgramData.  # noqa: E501


        :return: The com of this DrillingParameterProgramData.  # noqa: E501
        :rtype: str
        """
        return self._com

    @com.setter
    def com(self, com):
        """Sets the com of this DrillingParameterProgramData.


        :param com: The com of this DrillingParameterProgramData.  # noqa: E501
        :type: str
        """

        self._com = com

    @property
    def depthbtm(self):
        """Gets the depthbtm of this DrillingParameterProgramData.  # noqa: E501


        :return: The depthbtm of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._depthbtm

    @depthbtm.setter
    def depthbtm(self, depthbtm):
        """Sets the depthbtm of this DrillingParameterProgramData.


        :param depthbtm: The depthbtm of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._depthbtm = depthbtm

    @property
    def depthtop(self):
        """Gets the depthtop of this DrillingParameterProgramData.  # noqa: E501


        :return: The depthtop of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._depthtop

    @depthtop.setter
    def depthtop(self, depthtop):
        """Sets the depthtop of this DrillingParameterProgramData.


        :param depthtop: The depthtop of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._depthtop = depthtop

    @property
    def drillconsid(self):
        """Gets the drillconsid of this DrillingParameterProgramData.  # noqa: E501


        :return: The drillconsid of this DrillingParameterProgramData.  # noqa: E501
        :rtype: str
        """
        return self._drillconsid

    @drillconsid.setter
    def drillconsid(self, drillconsid):
        """Sets the drillconsid of this DrillingParameterProgramData.


        :param drillconsid: The drillconsid of this DrillingParameterProgramData.  # noqa: E501
        :type: str
        """

        self._drillconsid = drillconsid

    @property
    def ecdmax(self):
        """Gets the ecdmax of this DrillingParameterProgramData.  # noqa: E501


        :return: The ecdmax of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._ecdmax

    @ecdmax.setter
    def ecdmax(self, ecdmax):
        """Sets the ecdmax of this DrillingParameterProgramData.


        :param ecdmax: The ecdmax of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._ecdmax = ecdmax

    @property
    def ecdmin(self):
        """Gets the ecdmin of this DrillingParameterProgramData.  # noqa: E501


        :return: The ecdmin of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._ecdmin

    @ecdmin.setter
    def ecdmin(self, ecdmin):
        """Sets the ecdmin of this DrillingParameterProgramData.


        :param ecdmin: The ecdmin of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._ecdmin = ecdmin

    @property
    def gasinjratemax(self):
        """Gets the gasinjratemax of this DrillingParameterProgramData.  # noqa: E501


        :return: The gasinjratemax of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._gasinjratemax

    @gasinjratemax.setter
    def gasinjratemax(self, gasinjratemax):
        """Sets the gasinjratemax of this DrillingParameterProgramData.


        :param gasinjratemax: The gasinjratemax of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._gasinjratemax = gasinjratemax

    @property
    def gasinjratemin(self):
        """Gets the gasinjratemin of this DrillingParameterProgramData.  # noqa: E501


        :return: The gasinjratemin of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._gasinjratemin

    @gasinjratemin.setter
    def gasinjratemin(self, gasinjratemin):
        """Sets the gasinjratemin of this DrillingParameterProgramData.


        :param gasinjratemin: The gasinjratemin of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._gasinjratemin = gasinjratemin

    @property
    def gasreturnratemax(self):
        """Gets the gasreturnratemax of this DrillingParameterProgramData.  # noqa: E501


        :return: The gasreturnratemax of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._gasreturnratemax

    @gasreturnratemax.setter
    def gasreturnratemax(self, gasreturnratemax):
        """Sets the gasreturnratemax of this DrillingParameterProgramData.


        :param gasreturnratemax: The gasreturnratemax of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._gasreturnratemax = gasreturnratemax

    @property
    def gasreturnratemin(self):
        """Gets the gasreturnratemin of this DrillingParameterProgramData.  # noqa: E501


        :return: The gasreturnratemin of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._gasreturnratemin

    @gasreturnratemin.setter
    def gasreturnratemin(self, gasreturnratemin):
        """Sets the gasreturnratemin of this DrillingParameterProgramData.


        :param gasreturnratemin: The gasreturnratemin of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._gasreturnratemin = gasreturnratemin

    @property
    def hookloadoffbottommax(self):
        """Gets the hookloadoffbottommax of this DrillingParameterProgramData.  # noqa: E501


        :return: The hookloadoffbottommax of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._hookloadoffbottommax

    @hookloadoffbottommax.setter
    def hookloadoffbottommax(self, hookloadoffbottommax):
        """Sets the hookloadoffbottommax of this DrillingParameterProgramData.


        :param hookloadoffbottommax: The hookloadoffbottommax of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._hookloadoffbottommax = hookloadoffbottommax

    @property
    def hookloadoffbottommin(self):
        """Gets the hookloadoffbottommin of this DrillingParameterProgramData.  # noqa: E501


        :return: The hookloadoffbottommin of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._hookloadoffbottommin

    @hookloadoffbottommin.setter
    def hookloadoffbottommin(self, hookloadoffbottommin):
        """Sets the hookloadoffbottommin of this DrillingParameterProgramData.


        :param hookloadoffbottommin: The hookloadoffbottommin of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._hookloadoffbottommin = hookloadoffbottommin

    @property
    def hookloadpickupmax(self):
        """Gets the hookloadpickupmax of this DrillingParameterProgramData.  # noqa: E501


        :return: The hookloadpickupmax of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._hookloadpickupmax

    @hookloadpickupmax.setter
    def hookloadpickupmax(self, hookloadpickupmax):
        """Sets the hookloadpickupmax of this DrillingParameterProgramData.


        :param hookloadpickupmax: The hookloadpickupmax of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._hookloadpickupmax = hookloadpickupmax

    @property
    def hookloadpickupmin(self):
        """Gets the hookloadpickupmin of this DrillingParameterProgramData.  # noqa: E501


        :return: The hookloadpickupmin of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._hookloadpickupmin

    @hookloadpickupmin.setter
    def hookloadpickupmin(self, hookloadpickupmin):
        """Sets the hookloadpickupmin of this DrillingParameterProgramData.


        :param hookloadpickupmin: The hookloadpickupmin of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._hookloadpickupmin = hookloadpickupmin

    @property
    def hookloadrotatingmax(self):
        """Gets the hookloadrotatingmax of this DrillingParameterProgramData.  # noqa: E501


        :return: The hookloadrotatingmax of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._hookloadrotatingmax

    @hookloadrotatingmax.setter
    def hookloadrotatingmax(self, hookloadrotatingmax):
        """Sets the hookloadrotatingmax of this DrillingParameterProgramData.


        :param hookloadrotatingmax: The hookloadrotatingmax of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._hookloadrotatingmax = hookloadrotatingmax

    @property
    def hookloadrotatingmin(self):
        """Gets the hookloadrotatingmin of this DrillingParameterProgramData.  # noqa: E501


        :return: The hookloadrotatingmin of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._hookloadrotatingmin

    @hookloadrotatingmin.setter
    def hookloadrotatingmin(self, hookloadrotatingmin):
        """Sets the hookloadrotatingmin of this DrillingParameterProgramData.


        :param hookloadrotatingmin: The hookloadrotatingmin of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._hookloadrotatingmin = hookloadrotatingmin

    @property
    def hookloadslackoffmax(self):
        """Gets the hookloadslackoffmax of this DrillingParameterProgramData.  # noqa: E501


        :return: The hookloadslackoffmax of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._hookloadslackoffmax

    @hookloadslackoffmax.setter
    def hookloadslackoffmax(self, hookloadslackoffmax):
        """Sets the hookloadslackoffmax of this DrillingParameterProgramData.


        :param hookloadslackoffmax: The hookloadslackoffmax of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._hookloadslackoffmax = hookloadslackoffmax

    @property
    def hookloadslackoffmin(self):
        """Gets the hookloadslackoffmin of this DrillingParameterProgramData.  # noqa: E501


        :return: The hookloadslackoffmin of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._hookloadslackoffmin

    @hookloadslackoffmin.setter
    def hookloadslackoffmin(self, hookloadslackoffmin):
        """Sets the hookloadslackoffmin of this DrillingParameterProgramData.


        :param hookloadslackoffmin: The hookloadslackoffmin of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._hookloadslackoffmin = hookloadslackoffmin

    @property
    def idrec(self):
        """Gets the idrec of this DrillingParameterProgramData.  # noqa: E501

        Its value is None for insert operation. It required for update and delete operations  # noqa: E501

        :return: The idrec of this DrillingParameterProgramData.  # noqa: E501
        :rtype: str
        """
        return self._idrec

    @idrec.setter
    def idrec(self, idrec):
        """Sets the idrec of this DrillingParameterProgramData.

        Its value is None for insert operation. It required for update and delete operations  # noqa: E501

        :param idrec: The idrec of this DrillingParameterProgramData.  # noqa: E501
        :type: str
        """

        self._idrec = idrec

    @property
    def idrecitem(self):
        """Gets the idrecitem of this DrillingParameterProgramData.  # noqa: E501


        :return: The idrecitem of this DrillingParameterProgramData.  # noqa: E501
        :rtype: str
        """
        return self._idrecitem

    @idrecitem.setter
    def idrecitem(self, idrecitem):
        """Sets the idrecitem of this DrillingParameterProgramData.


        :param idrecitem: The idrecitem of this DrillingParameterProgramData.  # noqa: E501
        :type: str
        """

        self._idrecitem = idrecitem

    @property
    def idrecparent(self):
        """Gets the idrecparent of this DrillingParameterProgramData.  # noqa: E501

        id of parrent table  # noqa: E501

        :return: The idrecparent of this DrillingParameterProgramData.  # noqa: E501
        :rtype: str
        """
        return self._idrecparent

    @idrecparent.setter
    def idrecparent(self, idrecparent):
        """Sets the idrecparent of this DrillingParameterProgramData.

        id of parrent table  # noqa: E501

        :param idrecparent: The idrecparent of this DrillingParameterProgramData.  # noqa: E501
        :type: str
        """
        if idrecparent is None:
            raise ValueError("Invalid value for `idrecparent`, must not be `None`")  # noqa: E501

        self._idrecparent = idrecparent

    @property
    def idrecwellbore(self):
        """Gets the idrecwellbore of this DrillingParameterProgramData.  # noqa: E501


        :return: The idrecwellbore of this DrillingParameterProgramData.  # noqa: E501
        :rtype: str
        """
        return self._idrecwellbore

    @idrecwellbore.setter
    def idrecwellbore(self, idrecwellbore):
        """Sets the idrecwellbore of this DrillingParameterProgramData.


        :param idrecwellbore: The idrecwellbore of this DrillingParameterProgramData.  # noqa: E501
        :type: str
        """

        self._idrecwellbore = idrecwellbore

    @property
    def idwell(self):
        """Gets the idwell of this DrillingParameterProgramData.  # noqa: E501

        id of well  # noqa: E501

        :return: The idwell of this DrillingParameterProgramData.  # noqa: E501
        :rtype: str
        """
        return self._idwell

    @idwell.setter
    def idwell(self, idwell):
        """Sets the idwell of this DrillingParameterProgramData.

        id of well  # noqa: E501

        :param idwell: The idwell of this DrillingParameterProgramData.  # noqa: E501
        :type: str
        """
        if idwell is None:
            raise ValueError("Invalid value for `idwell`, must not be `None`")  # noqa: E501

        self._idwell = idwell

    @property
    def injtempmax(self):
        """Gets the injtempmax of this DrillingParameterProgramData.  # noqa: E501


        :return: The injtempmax of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._injtempmax

    @injtempmax.setter
    def injtempmax(self, injtempmax):
        """Sets the injtempmax of this DrillingParameterProgramData.


        :param injtempmax: The injtempmax of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._injtempmax = injtempmax

    @property
    def injtempmin(self):
        """Gets the injtempmin of this DrillingParameterProgramData.  # noqa: E501


        :return: The injtempmin of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._injtempmin

    @injtempmin.setter
    def injtempmin(self, injtempmin):
        """Sets the injtempmin of this DrillingParameterProgramData.


        :param injtempmin: The injtempmin of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._injtempmin = injtempmin

    @property
    def liquidinjratemax(self):
        """Gets the liquidinjratemax of this DrillingParameterProgramData.  # noqa: E501


        :return: The liquidinjratemax of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._liquidinjratemax

    @liquidinjratemax.setter
    def liquidinjratemax(self, liquidinjratemax):
        """Sets the liquidinjratemax of this DrillingParameterProgramData.


        :param liquidinjratemax: The liquidinjratemax of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._liquidinjratemax = liquidinjratemax

    @property
    def liquidinjratemin(self):
        """Gets the liquidinjratemin of this DrillingParameterProgramData.  # noqa: E501


        :return: The liquidinjratemin of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._liquidinjratemin

    @liquidinjratemin.setter
    def liquidinjratemin(self, liquidinjratemin):
        """Sets the liquidinjratemin of this DrillingParameterProgramData.


        :param liquidinjratemin: The liquidinjratemin of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._liquidinjratemin = liquidinjratemin

    @property
    def liquidinjraterisermax(self):
        """Gets the liquidinjraterisermax of this DrillingParameterProgramData.  # noqa: E501


        :return: The liquidinjraterisermax of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._liquidinjraterisermax

    @liquidinjraterisermax.setter
    def liquidinjraterisermax(self, liquidinjraterisermax):
        """Sets the liquidinjraterisermax of this DrillingParameterProgramData.


        :param liquidinjraterisermax: The liquidinjraterisermax of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._liquidinjraterisermax = liquidinjraterisermax

    @property
    def liquidinjraterisermin(self):
        """Gets the liquidinjraterisermin of this DrillingParameterProgramData.  # noqa: E501


        :return: The liquidinjraterisermin of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._liquidinjraterisermin

    @liquidinjraterisermin.setter
    def liquidinjraterisermin(self, liquidinjraterisermin):
        """Sets the liquidinjraterisermin of this DrillingParameterProgramData.


        :param liquidinjraterisermin: The liquidinjraterisermin of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._liquidinjraterisermin = liquidinjraterisermin

    @property
    def liquidreturnratemax(self):
        """Gets the liquidreturnratemax of this DrillingParameterProgramData.  # noqa: E501


        :return: The liquidreturnratemax of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._liquidreturnratemax

    @liquidreturnratemax.setter
    def liquidreturnratemax(self, liquidreturnratemax):
        """Sets the liquidreturnratemax of this DrillingParameterProgramData.


        :param liquidreturnratemax: The liquidreturnratemax of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._liquidreturnratemax = liquidreturnratemax

    @property
    def liquidreturnratemin(self):
        """Gets the liquidreturnratemin of this DrillingParameterProgramData.  # noqa: E501


        :return: The liquidreturnratemin of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._liquidreturnratemin

    @liquidreturnratemin.setter
    def liquidreturnratemin(self, liquidreturnratemin):
        """Sets the liquidreturnratemin of this DrillingParameterProgramData.


        :param liquidreturnratemin: The liquidreturnratemin of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._liquidreturnratemin = liquidreturnratemin

    @property
    def ropinstmax(self):
        """Gets the ropinstmax of this DrillingParameterProgramData.  # noqa: E501


        :return: The ropinstmax of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._ropinstmax

    @ropinstmax.setter
    def ropinstmax(self, ropinstmax):
        """Sets the ropinstmax of this DrillingParameterProgramData.


        :param ropinstmax: The ropinstmax of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._ropinstmax = ropinstmax

    @property
    def ropinstmin(self):
        """Gets the ropinstmin of this DrillingParameterProgramData.  # noqa: E501


        :return: The ropinstmin of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._ropinstmin

    @ropinstmin.setter
    def ropinstmin(self, ropinstmin):
        """Sets the ropinstmin of this DrillingParameterProgramData.


        :param ropinstmin: The ropinstmin of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._ropinstmin = ropinstmin

    @property
    def rpmmotormax(self):
        """Gets the rpmmotormax of this DrillingParameterProgramData.  # noqa: E501


        :return: The rpmmotormax of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._rpmmotormax

    @rpmmotormax.setter
    def rpmmotormax(self, rpmmotormax):
        """Sets the rpmmotormax of this DrillingParameterProgramData.


        :param rpmmotormax: The rpmmotormax of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._rpmmotormax = rpmmotormax

    @property
    def rpmmotormin(self):
        """Gets the rpmmotormin of this DrillingParameterProgramData.  # noqa: E501


        :return: The rpmmotormin of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._rpmmotormin

    @rpmmotormin.setter
    def rpmmotormin(self, rpmmotormin):
        """Sets the rpmmotormin of this DrillingParameterProgramData.


        :param rpmmotormin: The rpmmotormin of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._rpmmotormin = rpmmotormin

    @property
    def rpmstringmax(self):
        """Gets the rpmstringmax of this DrillingParameterProgramData.  # noqa: E501


        :return: The rpmstringmax of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._rpmstringmax

    @rpmstringmax.setter
    def rpmstringmax(self, rpmstringmax):
        """Sets the rpmstringmax of this DrillingParameterProgramData.


        :param rpmstringmax: The rpmstringmax of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._rpmstringmax = rpmstringmax

    @property
    def rpmstringmin(self):
        """Gets the rpmstringmin of this DrillingParameterProgramData.  # noqa: E501


        :return: The rpmstringmin of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._rpmstringmin

    @rpmstringmin.setter
    def rpmstringmin(self, rpmstringmin):
        """Sets the rpmstringmin of this DrillingParameterProgramData.


        :param rpmstringmin: The rpmstringmin of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._rpmstringmin = rpmstringmin

    @property
    def sppdiffmax(self):
        """Gets the sppdiffmax of this DrillingParameterProgramData.  # noqa: E501


        :return: The sppdiffmax of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._sppdiffmax

    @sppdiffmax.setter
    def sppdiffmax(self, sppdiffmax):
        """Sets the sppdiffmax of this DrillingParameterProgramData.


        :param sppdiffmax: The sppdiffmax of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._sppdiffmax = sppdiffmax

    @property
    def sppdiffmin(self):
        """Gets the sppdiffmin of this DrillingParameterProgramData.  # noqa: E501


        :return: The sppdiffmin of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._sppdiffmin

    @sppdiffmin.setter
    def sppdiffmin(self, sppdiffmin):
        """Sets the sppdiffmin of this DrillingParameterProgramData.


        :param sppdiffmin: The sppdiffmin of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._sppdiffmin = sppdiffmin

    @property
    def sppdrillmax(self):
        """Gets the sppdrillmax of this DrillingParameterProgramData.  # noqa: E501


        :return: The sppdrillmax of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._sppdrillmax

    @sppdrillmax.setter
    def sppdrillmax(self, sppdrillmax):
        """Sets the sppdrillmax of this DrillingParameterProgramData.


        :param sppdrillmax: The sppdrillmax of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._sppdrillmax = sppdrillmax

    @property
    def sppdrillmin(self):
        """Gets the sppdrillmin of this DrillingParameterProgramData.  # noqa: E501


        :return: The sppdrillmin of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._sppdrillmin

    @sppdrillmin.setter
    def sppdrillmin(self, sppdrillmin):
        """Sets the sppdrillmin of this DrillingParameterProgramData.


        :param sppdrillmin: The sppdrillmin of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._sppdrillmin = sppdrillmin

    @property
    def surfannpresmax(self):
        """Gets the surfannpresmax of this DrillingParameterProgramData.  # noqa: E501


        :return: The surfannpresmax of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._surfannpresmax

    @surfannpresmax.setter
    def surfannpresmax(self, surfannpresmax):
        """Sets the surfannpresmax of this DrillingParameterProgramData.


        :param surfannpresmax: The surfannpresmax of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._surfannpresmax = surfannpresmax

    @property
    def surfannpresmin(self):
        """Gets the surfannpresmin of this DrillingParameterProgramData.  # noqa: E501


        :return: The surfannpresmin of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._surfannpresmin

    @surfannpresmin.setter
    def surfannpresmin(self, surfannpresmin):
        """Sets the surfannpresmin of this DrillingParameterProgramData.


        :param surfannpresmin: The surfannpresmin of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._surfannpresmin = surfannpresmin

    @property
    def surfanntempmax(self):
        """Gets the surfanntempmax of this DrillingParameterProgramData.  # noqa: E501


        :return: The surfanntempmax of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._surfanntempmax

    @surfanntempmax.setter
    def surfanntempmax(self, surfanntempmax):
        """Sets the surfanntempmax of this DrillingParameterProgramData.


        :param surfanntempmax: The surfanntempmax of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._surfanntempmax = surfanntempmax

    @property
    def surfanntempmin(self):
        """Gets the surfanntempmin of this DrillingParameterProgramData.  # noqa: E501


        :return: The surfanntempmin of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._surfanntempmin

    @surfanntempmin.setter
    def surfanntempmin(self, surfanntempmin):
        """Sets the surfanntempmin of this DrillingParameterProgramData.


        :param surfanntempmin: The surfanntempmin of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._surfanntempmin = surfanntempmin

    @property
    def szodvgstabmax(self):
        """Gets the szodvgstabmax of this DrillingParameterProgramData.  # noqa: E501


        :return: The szodvgstabmax of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._szodvgstabmax

    @szodvgstabmax.setter
    def szodvgstabmax(self, szodvgstabmax):
        """Sets the szodvgstabmax of this DrillingParameterProgramData.


        :param szodvgstabmax: The szodvgstabmax of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._szodvgstabmax = szodvgstabmax

    @property
    def szodvgstabmin(self):
        """Gets the szodvgstabmin of this DrillingParameterProgramData.  # noqa: E501


        :return: The szodvgstabmin of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._szodvgstabmin

    @szodvgstabmin.setter
    def szodvgstabmin(self, szodvgstabmin):
        """Sets the szodvgstabmin of this DrillingParameterProgramData.


        :param szodvgstabmin: The szodvgstabmin of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._szodvgstabmin = szodvgstabmin

    @property
    def tfomax(self):
        """Gets the tfomax of this DrillingParameterProgramData.  # noqa: E501


        :return: The tfomax of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._tfomax

    @tfomax.setter
    def tfomax(self, tfomax):
        """Sets the tfomax of this DrillingParameterProgramData.


        :param tfomax: The tfomax of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._tfomax = tfomax

    @property
    def tfomin(self):
        """Gets the tfomin of this DrillingParameterProgramData.  # noqa: E501


        :return: The tfomin of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._tfomin

    @tfomin.setter
    def tfomin(self, tfomin):
        """Sets the tfomin of this DrillingParameterProgramData.


        :param tfomin: The tfomin of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._tfomin = tfomin

    @property
    def tforef(self):
        """Gets the tforef of this DrillingParameterProgramData.  # noqa: E501


        :return: The tforef of this DrillingParameterProgramData.  # noqa: E501
        :rtype: str
        """
        return self._tforef

    @tforef.setter
    def tforef(self, tforef):
        """Sets the tforef of this DrillingParameterProgramData.


        :param tforef: The tforef of this DrillingParameterProgramData.  # noqa: E501
        :type: str
        """

        self._tforef = tforef

    @property
    def torquedrillmax(self):
        """Gets the torquedrillmax of this DrillingParameterProgramData.  # noqa: E501


        :return: The torquedrillmax of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._torquedrillmax

    @torquedrillmax.setter
    def torquedrillmax(self, torquedrillmax):
        """Sets the torquedrillmax of this DrillingParameterProgramData.


        :param torquedrillmax: The torquedrillmax of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._torquedrillmax = torquedrillmax

    @property
    def torquedrillmin(self):
        """Gets the torquedrillmin of this DrillingParameterProgramData.  # noqa: E501


        :return: The torquedrillmin of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._torquedrillmin

    @torquedrillmin.setter
    def torquedrillmin(self, torquedrillmin):
        """Sets the torquedrillmin of this DrillingParameterProgramData.


        :param torquedrillmin: The torquedrillmin of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._torquedrillmin = torquedrillmin

    @property
    def torqueoffbtmmax(self):
        """Gets the torqueoffbtmmax of this DrillingParameterProgramData.  # noqa: E501


        :return: The torqueoffbtmmax of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._torqueoffbtmmax

    @torqueoffbtmmax.setter
    def torqueoffbtmmax(self, torqueoffbtmmax):
        """Sets the torqueoffbtmmax of this DrillingParameterProgramData.


        :param torqueoffbtmmax: The torqueoffbtmmax of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._torqueoffbtmmax = torqueoffbtmmax

    @property
    def torqueoffbtmmin(self):
        """Gets the torqueoffbtmmin of this DrillingParameterProgramData.  # noqa: E501


        :return: The torqueoffbtmmin of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._torqueoffbtmmin

    @torqueoffbtmmin.setter
    def torqueoffbtmmin(self, torqueoffbtmmin):
        """Sets the torqueoffbtmmin of this DrillingParameterProgramData.


        :param torqueoffbtmmin: The torqueoffbtmmin of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._torqueoffbtmmin = torqueoffbtmmin

    @property
    def torqueunits(self):
        """Gets the torqueunits of this DrillingParameterProgramData.  # noqa: E501


        :return: The torqueunits of this DrillingParameterProgramData.  # noqa: E501
        :rtype: str
        """
        return self._torqueunits

    @torqueunits.setter
    def torqueunits(self, torqueunits):
        """Sets the torqueunits of this DrillingParameterProgramData.


        :param torqueunits: The torqueunits of this DrillingParameterProgramData.  # noqa: E501
        :type: str
        """

        self._torqueunits = torqueunits

    @property
    def typ1(self):
        """Gets the typ1 of this DrillingParameterProgramData.  # noqa: E501


        :return: The typ1 of this DrillingParameterProgramData.  # noqa: E501
        :rtype: str
        """
        return self._typ1

    @typ1.setter
    def typ1(self, typ1):
        """Sets the typ1 of this DrillingParameterProgramData.


        :param typ1: The typ1 of this DrillingParameterProgramData.  # noqa: E501
        :type: str
        """

        self._typ1 = typ1

    @property
    def typ2(self):
        """Gets the typ2 of this DrillingParameterProgramData.  # noqa: E501


        :return: The typ2 of this DrillingParameterProgramData.  # noqa: E501
        :rtype: str
        """
        return self._typ2

    @typ2.setter
    def typ2(self, typ2):
        """Sets the typ2 of this DrillingParameterProgramData.


        :param typ2: The typ2 of this DrillingParameterProgramData.  # noqa: E501
        :type: str
        """

        self._typ2 = typ2

    @property
    def wobmax(self):
        """Gets the wobmax of this DrillingParameterProgramData.  # noqa: E501


        :return: The wobmax of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._wobmax

    @wobmax.setter
    def wobmax(self, wobmax):
        """Sets the wobmax of this DrillingParameterProgramData.


        :param wobmax: The wobmax of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._wobmax = wobmax

    @property
    def wobmin(self):
        """Gets the wobmin of this DrillingParameterProgramData.  # noqa: E501


        :return: The wobmin of this DrillingParameterProgramData.  # noqa: E501
        :rtype: float
        """
        return self._wobmin

    @wobmin.setter
    def wobmin(self, wobmin):
        """Sets the wobmin of this DrillingParameterProgramData.


        :param wobmin: The wobmin of this DrillingParameterProgramData.  # noqa: E501
        :type: float
        """

        self._wobmin = wobmin

    @property
    def systag(self):
        """Gets the systag of this DrillingParameterProgramData.  # noqa: E501


        :return: The systag of this DrillingParameterProgramData.  # noqa: E501
        :rtype: str
        """
        return self._systag

    @systag.setter
    def systag(self, systag):
        """Sets the systag of this DrillingParameterProgramData.


        :param systag: The systag of this DrillingParameterProgramData.  # noqa: E501
        :type: str
        """

        self._systag = systag

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(DrillingParameterProgramData, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DrillingParameterProgramData):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
