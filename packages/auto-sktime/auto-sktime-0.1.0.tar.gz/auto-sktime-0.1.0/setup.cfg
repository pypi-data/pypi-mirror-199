[metadata]
name = auto-sktime
description = Automatic creation of time series forecasts, regression and classification
author = Marc Zoeller
author_email = marc.zoeller@usu.com
license = MIT
license_files = LICENSE.txt
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8
url = https://github.com/Ennosigaeon/auto-sktime/
project_urls = 
	Documentation = https://github.com/Ennosigaeon/auto-sktime/
	Source = https://github.com/Ennosigaeon/auto-sktime/
platforms = any
classifiers = 
	Development Status :: 4 - Beta
	Programming Language :: Python

[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir = 
	=.
python_requires = >=3.8
install_requires = 
	importlib-metadata; python_version<"3.8"
	sktime==0.13.0
	ConfigSpace~=0.6.0
	smac~=1.4.0
	matplotlib~=3.6.2
	seaborn~=0.12.1
	tsmoothie~=1.0.4
	tsfresh~=0.19.0
	torch~=1.13.0
	numpy~=1.22.0

[options.packages.find]
where = .
exclude = 
	tests

[options.package_data]
* = *.yaml
autosktime.data.benchmark.data.CMAPSS = *.txt
autosktime.data.benchmark.data.filtration = *.csv
autosktime.data.benchmark.data.filtration.splits = *.csv
autosktime.data.benchmark.data.Phm08DataChallenge = *.txt
autosktime.data.benchmark.data.PHME20DataChallenge.Training.Large = *.csv
autosktime.data.benchmark.data.PHME20DataChallenge.Training.Small = *.csv
autosktime.data.benchmark.data.PHME20DataChallenge.Validation.Large = *.csv
autosktime.data.benchmark.data.PHME20DataChallenge.Validation.Small = *.csv

[options.extras_require]
testing = 
	setuptools
	pytest
	pytest-cov

[options.entry_points]

[tool:pytest]
addopts = 
	--verbose
norecursedirs = 
	dist
	build
	.tox
testpaths = tests

[devpi:upload]
no_vcs = 1
formats = bdist_wheel

[flake8]
max_line_length = 88
extend_ignore = E203, W503
exclude = 
	.tox
	build
	dist
	.eggs
	docs/conf.py

[pyscaffold]
version = 4.4
package = autosktime

[egg_info]
tag_build = 
tag_date = 0

