
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'EQUALS FALSE GRAVE_STRING LBRACKET LPAREN NULL QUOTED_STRING RBRACKET RPAREN SEMICOLON TRUE UNQUOTED_VALUEcompactdata : top_level_map\n    | valuetop_level_map : pair_listpair_list : pair SEMICOLON pair_list\n    | pairpair : key EQUALS value\n    | key map\n    | key arraymap : LPAREN pair_list RPARENarray : LBRACKET value_list RBRACKETvalue_list : array_value SEMICOLON value_list\n    | array_valuearray_value : orphan_pair\n    | valueorphan_pair : pairvalue : QUOTED_STRING\n    | GRAVE_STRING\n    | reserved\n    | unquoted_value\n    | map\n    | arrayreserved : NULL\n    | TRUE\n    | FALSEunquoted_value : UNQUOTED_VALUEkey : UNQUOTED_VALUE\n    | QUOTED_STRING\n    | GRAVE_STRING'
    
_lr_action_items = {'QUOTED_STRING':([0,16,17,19,29,35,],[5,22,5,22,37,5,]),'GRAVE_STRING':([0,16,17,19,29,35,],[6,23,6,23,38,6,]),'NULL':([0,17,29,35,],[12,12,12,12,]),'TRUE':([0,17,29,35,],[13,13,13,13,]),'FALSE':([0,17,29,35,],[14,14,14,14,]),'UNQUOTED_VALUE':([0,16,17,19,29,35,],[15,21,15,21,39,15,]),'LPAREN':([0,5,6,15,17,18,21,22,23,29,35,],[16,-27,-28,-26,16,16,-26,-27,-28,16,16,]),'LBRACKET':([0,5,6,15,17,18,21,22,23,29,35,],[17,-27,-28,-26,17,17,-26,-27,-28,17,17,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,30,31,32,33,34,36,37,38,39,],[0,-1,-2,-3,-16,-17,-18,-19,-20,-21,-5,-22,-23,-24,-25,-7,-8,-4,-9,-10,-6,-16,-17,-25,]),'SEMICOLON':([5,6,7,8,9,10,11,12,13,14,15,25,26,27,28,30,31,33,34,36,37,38,39,],[-16,-17,-18,-19,-20,-21,19,-22,-23,-24,-25,35,-13,-14,-15,-7,-8,-9,-10,-6,-16,-17,-25,]),'RBRACKET':([5,6,7,8,9,10,12,13,14,15,24,25,26,27,28,30,31,33,34,36,37,38,39,40,],[-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,34,-12,-13,-14,-15,-7,-8,-9,-10,-6,-16,-17,-25,-11,]),'EQUALS':([5,6,15,18,21,22,23,],[-27,-28,-26,29,-26,-27,-28,]),'RPAREN':([7,8,9,10,11,12,13,14,20,30,31,32,33,34,36,37,38,39,],[-18,-19,-20,-21,-5,-22,-23,-24,33,-7,-8,-4,-9,-10,-6,-16,-17,-25,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'compactdata':([0,],[1,]),'top_level_map':([0,],[2,]),'value':([0,17,29,35,],[3,27,36,27,]),'pair_list':([0,16,19,],[4,20,32,]),'reserved':([0,17,29,35,],[7,7,7,7,]),'unquoted_value':([0,17,29,35,],[8,8,8,8,]),'map':([0,17,18,29,35,],[9,9,30,9,9,]),'array':([0,17,18,29,35,],[10,10,31,10,10,]),'pair':([0,16,17,19,35,],[11,11,28,11,28,]),'key':([0,16,17,19,35,],[18,18,18,18,18,]),'value_list':([17,35,],[24,40,]),'array_value':([17,35,],[25,25,]),'orphan_pair':([17,35,],[26,26,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> compactdata","S'",1,None,None,None),
  ('compactdata -> top_level_map','compactdata',1,'p_compactdata','grammar_rules.py',2),
  ('compactdata -> value','compactdata',1,'p_compactdata','grammar_rules.py',3),
  ('top_level_map -> pair_list','top_level_map',1,'p_top_level_map','grammar_rules.py',8),
  ('pair_list -> pair SEMICOLON pair_list','pair_list',3,'p_pair_list','grammar_rules.py',13),
  ('pair_list -> pair','pair_list',1,'p_pair_list','grammar_rules.py',14),
  ('pair -> key EQUALS value','pair',3,'p_pair','grammar_rules.py',22),
  ('pair -> key map','pair',2,'p_pair','grammar_rules.py',23),
  ('pair -> key array','pair',2,'p_pair','grammar_rules.py',24),
  ('map -> LPAREN pair_list RPAREN','map',3,'p_map','grammar_rules.py',32),
  ('array -> LBRACKET value_list RBRACKET','array',3,'p_array','grammar_rules.py',37),
  ('value_list -> array_value SEMICOLON value_list','value_list',3,'p_value_list','grammar_rules.py',42),
  ('value_list -> array_value','value_list',1,'p_value_list','grammar_rules.py',43),
  ('array_value -> orphan_pair','array_value',1,'p_array_value','grammar_rules.py',51),
  ('array_value -> value','array_value',1,'p_array_value','grammar_rules.py',52),
  ('orphan_pair -> pair','orphan_pair',1,'p_orphan_pair','grammar_rules.py',57),
  ('value -> QUOTED_STRING','value',1,'p_value','grammar_rules.py',62),
  ('value -> GRAVE_STRING','value',1,'p_value','grammar_rules.py',63),
  ('value -> reserved','value',1,'p_value','grammar_rules.py',64),
  ('value -> unquoted_value','value',1,'p_value','grammar_rules.py',65),
  ('value -> map','value',1,'p_value','grammar_rules.py',66),
  ('value -> array','value',1,'p_value','grammar_rules.py',67),
  ('reserved -> NULL','reserved',1,'p_reserved','grammar_rules.py',72),
  ('reserved -> TRUE','reserved',1,'p_reserved','grammar_rules.py',73),
  ('reserved -> FALSE','reserved',1,'p_reserved','grammar_rules.py',74),
  ('unquoted_value -> UNQUOTED_VALUE','unquoted_value',1,'p_unquoted_value','grammar_rules.py',85),
  ('key -> UNQUOTED_VALUE','key',1,'p_key','grammar_rules.py',96),
  ('key -> QUOTED_STRING','key',1,'p_key','grammar_rules.py',97),
  ('key -> GRAVE_STRING','key',1,'p_key','grammar_rules.py',98),
]
